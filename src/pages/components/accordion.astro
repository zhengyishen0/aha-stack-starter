---
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/pine/Card.astro';
import Button from '../../components/pine/Button.astro';
import Badge from '../../components/pine/Badge.astro';
import Accordion from '../../components/pine/Accordion.astro';
---

<Layout title="Accordion Component Test">
  <main class="container mx-auto px-4 py-8 max-w-4xl">
    <!-- Header -->
    <div class="text-center mb-8">
      <h1 class="text-3xl font-bold mb-4">Accordion Component Test</h1>
      <div class="flex justify-center gap-2 mb-6">
        <Button href="/test" variant="outline" color="neutral">← Back to Test Suite</Button>
        <Button href="/test/all" variant="ghost" color="neutral">View All</Button>
      </div>
    </div>

    <!-- Basic Accordion Test -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Basic Accordion</h2>
        <p class="text-neutral-600 mb-4">Simple accordion with FAQ-style content. Only one panel can be open at a time.</p>
        <Accordion 
          items={[
            { 
              title: "What is Pine UI?", 
              content: "Pine UI is a modern Alpine.js component library that provides beautiful, interactive components for web applications. It focuses on simplicity and performance." 
            },
            { 
              title: "How do I install Pine UI?", 
              content: "You can install Pine UI by including Alpine.js and the Pine UI components in your project. Make sure to include the collapse plugin for accordion functionality." 
            },
            { 
              title: "Is Pine UI free to use?", 
              content: "Yes, Pine UI is completely free and open source. You can use it in both personal and commercial projects without any restrictions." 
            },
            { 
              title: "Does Pine UI support dark mode?", 
              content: "Pine UI components are designed to work with Tailwind CSS, which includes excellent dark mode support. You can easily implement dark mode by adding the appropriate Tailwind classes." 
            }
          ]} 
        />
      </div>
    </Card>

    <!-- Rich Content Accordion -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Rich Content</h2>
        <p class="text-neutral-600 mb-4">Accordion panels can contain HTML content including lists, links, and formatting.</p>
        <Accordion 
          items={[
            { 
              title: "Getting Started", 
              content: `<div class="space-y-3">
                <p>Follow these steps to get started with Pine UI:</p>
                <ol class="list-decimal list-inside space-y-1 ml-4">
                  <li>Install Alpine.js and required plugins</li>
                  <li>Include Pine UI components in your project</li>
                  <li>Configure Tailwind CSS</li>
                  <li>Start building amazing interfaces!</li>
                </ol>
                <p><a href="#" class="text-blue-600 hover:underline">View documentation →</a></p>
              </div>`
            },
            { 
              title: "Key Features", 
              content: `<div class="space-y-3">
                <p>Pine UI offers many powerful features:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li><strong>Alpine.js powered:</strong> Lightweight and performant</li>
                  <li><strong>Tailwind CSS:</strong> Utility-first styling</li>
                  <li><strong>Accessibility:</strong> Built with a11y in mind</li>
                  <li><strong>Responsive:</strong> Works on all device sizes</li>
                  <li><strong>Customizable:</strong> Easy to theme and extend</li>
                </ul>
              </div>`
            },
            { 
              title: "Browser Support", 
              content: `<div class="space-y-3">
                <p>Pine UI supports all modern browsers:</p>
                <div class="grid grid-cols-2 gap-2 mt-2">
                  <div class="flex items-center gap-2">
                    <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                    <span>Chrome 60+</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                    <span>Firefox 55+</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                    <span>Safari 11+</span>
                  </div>
                  <div class="flex items-center gap-2">
                    <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                    <span>Edge 79+</span>
                  </div>
                </div>
              </div>`
            }
          ]} 
        />
      </div>
    </Card>

    <!-- Technical Documentation -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Technical Documentation</h2>
        <p class="text-neutral-600 mb-4">Detailed technical information with code examples and implementation details.</p>
        <Accordion 
          items={[
            { 
              title: "Component Props", 
              content: `<div class="space-y-3">
                <p>The Accordion component accepts the following props:</p>
                <div class="bg-neutral-50 p-3 rounded-md font-mono text-sm">
                  <div><strong>items:</strong> Array&lt;{</div>
                  <div class="ml-4">id?: string;</div>
                  <div class="ml-4">title: string;</div>
                  <div class="ml-4">content: string;</div>
                  <div>}&gt;</div>
                  <div class="mt-2"><strong>class?:</strong> string</div>
                </div>
              </div>`
            },
            { 
              title: "Alpine.js Integration", 
              content: `<div class="space-y-3">
                <p>The accordion uses Alpine.js for state management:</p>
                <div class="bg-neutral-50 p-3 rounded-md font-mono text-sm">
                  <div>x-data="{ activeAccordion: '' }"</div>
                  <div>setActiveAccordion(id) {</div>
                  <div class="ml-4">this.activeAccordion = </div>
                  <div class="ml-6">(this.activeAccordion == id) ? '' : id</div>
                  <div>}</div>
                </div>
                <p>Each panel toggles based on the activeAccordion state.</p>
              </div>`
            },
            { 
              title: "Styling & Animation", 
              content: `<div class="space-y-3">
                <p>The accordion includes smooth collapse animations using Alpine's x-collapse directive:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li>Smooth expand/collapse transitions</li>
                  <li>Rotating chevron icon animation</li>
                  <li>Hover states for better UX</li>
                  <li>Focus states for accessibility</li>
                </ul>
                <p class="text-sm text-neutral-500">Requires Alpine.js collapse plugin</p>
              </div>`
            }
          ]} 
        />
      </div>
    </Card>

    <!-- Custom Styling Examples -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Custom Styling</h2>
        <p class="text-neutral-600 mb-4">Examples of accordion with custom classes and styling.</p>
        
        <div class="space-y-6">
          <!-- Rounded Accordion -->
          <div>
            <h3 class="text-lg font-semibold mb-3">Rounded Style</h3>
            <Accordion 
              class="rounded-lg overflow-hidden border border-neutral-200"
              items={[
                { 
                  title: "Rounded Design", 
                  content: "This accordion has rounded corners and a custom border for a more modern look." 
                },
                { 
                  title: "Custom Styling", 
                  content: "You can easily customize the appearance by passing additional classes through the class prop." 
                }
              ]} 
            />
          </div>

          <!-- Compact Accordion -->
          <div>
            <h3 class="text-lg font-semibold mb-3">Compact Style</h3>
            <div class="[&_.px-6]:px-4 [&_.py-4]:py-3">
              <Accordion 
                items={[
                  { 
                    title: "Compact Layout", 
                    content: "This version uses smaller padding for a more compact appearance." 
                  },
                  { 
                    title: "Space Efficient", 
                    content: "Perfect for sidebars or areas where space is limited." 
                  }
                ]} 
              />
            </div>
          </div>
        </div>
      </div>
    </Card>

    <!-- Interactive Content Test -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Interactive Content</h2>
        <p class="text-neutral-600 mb-4">Accordion panels can contain interactive elements like buttons and forms.</p>
        <Accordion 
          items={[
            { 
              title: "Interactive Elements", 
              content: `<div class="space-y-4" x-data="{ count: 0, message: '' }">
                <p>Counter: <span x-text="count" class="font-bold"></span></p>
                <div class="flex gap-2">
                  <button 
                    @click="count++" 
                    class="px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm"
                  >
                    +1
                  </button>
                  <button 
                    @click="count--" 
                    class="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-sm"
                  >
                    -1
                  </button>
                  <button 
                    @click="count = 0" 
                    class="px-3 py-1 bg-neutral-500 text-white rounded hover:bg-neutral-600 text-sm"
                  >
                    Reset
                  </button>
                </div>
              </div>`
            },
            { 
              title: "Form Elements", 
              content: `<div class="space-y-3" x-data="{ email: '', subscribed: false }">
                <div>
                  <label class="block text-sm font-medium mb-1">Email Address</label>
                  <input 
                    type="email" 
                    x-model="email"
                    class="w-full px-3 py-2 border border-neutral-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="Enter your email"
                  />
                </div>
                <button 
                  @click="subscribed = true; email = ''"
                  class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 text-sm"
                  :disabled="!email"
                >
                  Subscribe
                </button>
                <div x-show="subscribed" class="text-green-600 text-sm">
                  ✓ Successfully subscribed!
                </div>
              </div>`
            },
            { 
              title: "Nested Components", 
              content: `<div class="space-y-3">
                <p>You can even nest other components inside accordion panels:</p>
                <div class="flex gap-2">
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    Badge
                  </span>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                    Success
                  </span>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                    Warning
                  </span>
                </div>
                <div class="p-3 bg-blue-50 border border-blue-200 rounded">
                  <p class="text-sm text-blue-800">This is a nested card-like component within the accordion panel.</p>
                </div>
              </div>`
            }
          ]} 
        />
      </div>
    </Card>

    <!-- Accessibility Features -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Accessibility Features</h2>
        <p class="text-neutral-600 mb-4">The accordion component includes built-in accessibility features.</p>
        <Accordion 
          items={[
            { 
              title: "Keyboard Navigation", 
              content: `<div class="space-y-3">
                <p>The accordion supports keyboard navigation:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li><kbd class="px-2 py-1 bg-neutral-100 rounded text-xs">Tab</kbd> - Navigate between accordion headers</li>
                  <li><kbd class="px-2 py-1 bg-neutral-100 rounded text-xs">Enter</kbd> or <kbd class="px-2 py-1 bg-neutral-100 rounded text-xs">Space</kbd> - Toggle accordion panel</li>
                  <li><kbd class="px-2 py-1 bg-neutral-100 rounded text-xs">Shift + Tab</kbd> - Navigate backwards</li>
                </ul>
              </div>`
            },
            { 
              title: "Focus Management", 
              content: `<div class="space-y-3">
                <p>Focus indicators and management:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li>Visible focus rings on accordion headers</li>
                  <li>Proper focus restoration after panel toggle</li>
                  <li>High contrast focus indicators</li>
                  <li>Focus trapping within expanded panels (when needed)</li>
                </ul>
              </div>`
            },
            { 
              title: "Screen Reader Support", 
              content: `<div class="space-y-3">
                <p>ARIA attributes and screen reader compatibility:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li>Semantic button elements for headers</li>
                  <li>Descriptive text for expand/collapse state</li>
                  <li>Proper heading hierarchy</li>
                  <li>Content associations between headers and panels</li>
                </ul>
                <p class="text-sm text-neutral-500">Try using a screen reader to test the experience!</p>
              </div>`
            }
          ]} 
        />
      </div>
    </Card>

    <!-- Performance Notes -->
    <Card class="mb-8">
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Performance & Best Practices</h2>
        <p class="text-neutral-600 mb-4">Tips and considerations for optimal accordion performance.</p>
        <Accordion 
          items={[
            { 
              title: "Content Loading", 
              content: `<div class="space-y-3">
                <p>For optimal performance with large content:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li><strong>Lazy loading:</strong> Consider loading content only when panels are opened</li>
                  <li><strong>Content limits:</strong> Keep panel content reasonable in size</li>
                  <li><strong>Image optimization:</strong> Optimize images within accordion panels</li>
                  <li><strong>Progressive enhancement:</strong> Ensure basic functionality without JavaScript</li>
                </ul>
              </div>`
            },
            { 
              title: "Animation Performance", 
              content: `<div class="space-y-3">
                <p>The collapse animation is optimized for performance:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li>Uses CSS transforms for smooth animations</li>
                  <li>Hardware acceleration when possible</li>
                  <li>Respects user's motion preferences</li>
                  <li>Minimal reflow and repaint operations</li>
                </ul>
                <p class="text-sm text-neutral-500">Animation duration: ~200ms for optimal UX</p>
              </div>`
            },
            { 
              title: "SEO Considerations", 
              content: `<div class="space-y-3">
                <p>Accordion content is SEO-friendly:</p>
                <ul class="list-disc list-inside space-y-1 ml-4">
                  <li><strong>Crawlable content:</strong> All content is in the DOM and crawlable</li>
                  <li><strong>Structured data:</strong> Use appropriate schema markup for FAQ content</li>
                  <li><strong>Heading hierarchy:</strong> Maintain proper H1-H6 structure</li>
                  <li><strong>Content priority:</strong> Important content should be visible by default</li>
                </ul>
              </div>`
            }
          ]} 
        />
      </div>
    </Card>

    <!-- Status Summary -->
    <Card>
      <div class="p-6">
        <h2 class="text-2xl font-bold mb-4">Test Results</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Basic functionality</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Rich content support</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Interactive elements</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Alpine.js integration</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Custom styling</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Collapse animations</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Accessibility features</p>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <Badge color="green" class="mb-2">✓ Working</Badge>
            <p class="text-sm">Performance optimized</p>
          </div>
        </div>
        
        <div class="mt-6 p-4 bg-blue-50 rounded-lg">
          <h3 class="font-semibold text-blue-900 mb-2">Component Summary</h3>
          <p class="text-blue-800 text-sm">
            The Accordion component is fully functional with smooth animations, accessibility features, 
            and support for rich content. It uses Alpine.js for state management and includes proper 
            focus handling and keyboard navigation. The component allows only one panel to be open 
            at a time and supports custom styling through the class prop.
          </p>
        </div>
      </div>
    </Card>
  </main>
</Layout>