---
import Layout from '../layouts/Layout.astro';
import Button from '../components/ui/Button.astro';
import Modal from '../components/ui/Modal.astro';
import Toast from '../components/ui/Toast.astro';
import Tooltip from '../components/ui/Tooltip.astro';
import Popover from '../components/ui/Popover.astro';
import Dropdown from '../components/ui/Dropdown.astro';
import RetroGrid from '../components/ui/RetroGrid.astro';
import SlideOver from '../components/ui/SlideOver.astro';
import TextAnimation from '../components/ui/TextAnimation.astro';
import MenuBar from '../components/ui/MenuBar.astro';
import NavigationMenu from '../components/ui/NavigationMenu.astro';
import Pagination from '../components/ui/Pagination.astro';
import Breadcrumbs from '../components/ui/Breadcrumbs.astro';
import Tabs from '../components/ui/Tabs.astro';
import CopyToClipboard from '../components/ui/CopyToClipboard.astro';
import VideoPlayer from '../components/ui/VideoPlayer.astro';
import TextInput from '../components/ui/TextInput.astro';
import Textarea from '../components/ui/Textarea.astro';
import Select from '../components/ui/Select.astro';
import Checkbox from '../components/ui/Checkbox.astro';
import Switch from '../components/ui/Switch.astro';
import RangeSlider from '../components/ui/RangeSlider.astro';
import RadioGroup from '../components/ui/RadioGroup.astro';
import Alert from '../components/ui/Alert.astro';
import Banner from '../components/ui/Banner.astro';
import Accordion from '../components/ui/Accordion.astro';
import Badge from '../components/ui/Badge.astro';
import Card from '../components/ui/Card.astro';
import Command from '../components/ui/Command.astro';
import ContextMenu from '../components/ui/ContextMenu.astro';
import DatePicker from '../components/ui/DatePicker.astro';
import FullScreenModal from '../components/ui/FullScreenModal.astro';
import HoverCard from '../components/ui/HoverCard.astro';
import ImageGallery from '../components/ui/ImageGallery.astro';
import Marquee from '../components/ui/Marquee.astro';
import MonacoEditor from '../components/ui/MonacoEditor.astro';
import Progress from '../components/ui/Progress.astro';
import Quotes from '../components/ui/Quotes.astro';
import Rating from '../components/ui/Rating.astro';
import Table from '../components/ui/Table.astro';
import TypingEffect from '../components/ui/TypingEffect.astro';
---

<Layout title="Design System">
  <main class="container">
    <!-- Navigation Bar -->
    <nav class="design-nav">
      <div class="design-nav-container">
        <Button href="../" variant="solid" color="neutral" size="sm">Back to Home</Button>
        <h1 class="design-nav-title">Design System</h1>
        <div class="design-nav-spacer"></div> <!-- Spacer to center the title -->
      </div>
    </nav>

    <div class="stack-lg">
      <h1>Design System</h1>

      <!-- Typography Test -->
      <section class="stack">
        <h2>Typography Scale</h2>
        <h1>Heading 1 (5xl)</h1>
        <h2>Heading 2 (4xl)</h2>
        <h3>Heading 3 (3xl)</h3>
        <h4>Heading 4 (2xl)</h4>
        <h5>Heading 5 (xl)</h5>
        <h6>Heading 6 (lg)</h6>
        <p>Body text (base) - Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        <small>Small text (xs) - Additional information</small>
      </section>

      <!-- Button Tests -->
      <section class="stack">
        <h2>Button Variants & Colors</h2>
        
        <div class="stack">
          <h3>Solid Buttons</h3>
          <div class="cluster">
            <Button variant="solid" color="neutral">Neutral</Button>
            <Button variant="solid" color="blue">Blue</Button>
            <Button variant="solid" color="red">Red</Button>
            <Button variant="solid" color="green">Green</Button>
            <Button variant="solid" color="yellow">Yellow</Button>
            <Button variant="solid" color="purple">Purple</Button>
          </div>
        </div>

        <div class="stack">
          <h3>Outline Buttons</h3>
          <div class="cluster">
            <Button variant="outline" color="neutral">Neutral</Button>
            <Button variant="outline" color="blue">Blue</Button>
            <Button variant="outline" color="red">Red</Button>
            <Button variant="outline" color="green">Green</Button>
            <Button variant="outline" color="yellow">Yellow</Button>
            <Button variant="outline" color="purple">Purple</Button>
          </div>
        </div>

        <div class="stack">
          <h3>Soft Buttons</h3>
          <div class="cluster">
            <Button variant="soft" color="neutral">Neutral</Button>
            <Button variant="soft" color="blue">Blue</Button>
            <Button variant="soft" color="red">Red</Button>
            <Button variant="soft" color="green">Green</Button>
            <Button variant="soft" color="yellow">Yellow</Button>
            <Button variant="soft" color="purple">Purple</Button>
          </div>
        </div>

        <div class="stack">
          <h3>Ghost Buttons</h3>
          <div class="cluster">
            <Button variant="ghost" color="neutral">Neutral</Button>
            <Button variant="ghost" color="blue">Blue</Button>
            <Button variant="ghost" color="red">Red</Button>
            <Button variant="ghost" color="green">Green</Button>
            <Button variant="ghost" color="yellow">Yellow</Button>
            <Button variant="ghost" color="purple">Purple</Button>
          </div>
        </div>

        <div class="stack">
          <h3>Button Sizes</h3>
          <div class="cluster">
            <Button variant="solid" color="blue" size="sm">Small</Button>
            <Button variant="solid" color="blue" size="md">Medium</Button>
            <Button variant="solid" color="blue" size="lg">Large</Button>
            <Button variant="solid" color="blue" size="xl">X-Large</Button>
          </div>
        </div>

        <div class="stack">
          <h3>Disabled State</h3>
          <div class="cluster">
            <Button variant="solid" color="blue" disabled>Disabled Solid</Button>
            <Button variant="outline" color="blue" disabled>Disabled Outline</Button>
          </div>
        </div>
      </section>

      <!-- Alert Component Test -->
      <section class="stack">
        <h2>Alert Component</h2>
        
        <div class="stack">
          <h3>Alert Variants</h3>
          <div class="stack">
            <Alert variant="default" title="Default Alert">
              This is a default alert with a title. It uses neutral colors and is perfect for general notifications.
            </Alert>
            
            <Alert variant="blue" title="Information" dismissible={true}>
              This is an informational alert that can be dismissed. It's perfect for showing helpful tips or updates.
            </Alert>
            
            <Alert variant="green" title="Success!" dismissible={true}>
              Your action was completed successfully. This alert confirms that everything went as expected.
            </Alert>
            
            <Alert variant="yellow" title="Warning" dismissible={true}>
              Please review your input before proceeding. This warning helps prevent potential issues.
            </Alert>
            
            <Alert variant="red" title="Error" dismissible={true}>
              Something went wrong. Please check your input and try again.
            </Alert>
          </div>

          <h3>Soft Alert Variants</h3>
          <div class="stack">
            <Alert variant="soft-blue" title="Soft Information">
              This is a soft blue alert with subtle background colors for less intrusive notifications.
            </Alert>
            
            <Alert variant="soft-green" title="Soft Success">
              A gentle success notification that doesn't overpower the content.
            </Alert>
            
            <Alert variant="soft-yellow" title="Soft Warning">
              A subtle warning that draws attention without being too bold.
            </Alert>
            
            <Alert variant="soft-red" title="Soft Error">
              A gentle error notification for less critical issues.
            </Alert>
          </div>

          <h3>Alert with Icons</h3>
          <div class="stack">
            <Alert 
              variant="blue" 
              title="Information with Icon"
              icon='<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
              dismissible={true}
            >
              This alert includes a custom information icon to enhance visual communication.
            </Alert>
            
            <Alert 
              variant="green" 
              title="Success with Check Icon"
              icon='<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>'
              dismissible={true}
            >
              This success alert uses a checkmark icon to reinforce the positive message.
            </Alert>
            
            <Alert 
              variant="yellow" 
              title="Warning with Alert Icon"
              icon='<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4.5c-.77-.833-2.694-.833-3.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"></path>'
              dismissible={true}
            >
              Warning alerts can include a triangle icon to emphasize caution.
            </Alert>
          </div>

          <h3>Alerts without Titles</h3>
          <div class="stack">
            <Alert variant="blue" dismissible={true}>
              This is a simple alert without a title. Perfect for brief notifications or status updates.
            </Alert>
            
            <Alert variant="soft-green">
              A non-dismissible alert without a title, ideal for persistent status information.
            </Alert>
          </div>

          <h3>Complex Alert Content</h3>
          <div class="stack">
            <Alert variant="soft-blue" title="System Update Available" dismissible={true}>
              <p>A new system update is available with the following improvements:</p>
              <ul style="margin: var(--space-2) 0 var(--space-2) var(--space-4); color: var(--color-blue-text);">
                <li>Enhanced security features</li>
                <li>Performance improvements</li>
                <li>Bug fixes and stability updates</li>
              </ul>
              <div class="cluster" style="margin-top: var(--space-3);">
                <Button variant="solid" color="blue" size="sm">Update Now</Button>
                <Button variant="ghost" color="blue" size="sm">Later</Button>
              </div>
            </Alert>
          </div>
        </div>
      </section>

      <!-- Banner Component Test -->
      <section class="stack">
        <h2>Banner Component</h2>
        
        <div class="stack">
          <h3>Banner Variants</h3>
          <div class="stack">
            <div class="cluster">
              <Button 
                variant="solid" 
                color="blue" 
                onclick="showTopBanner()"
              >
                Show Top Banner
              </Button>
              <Button 
                variant="solid" 
                color="green" 
                onclick="showBottomBanner()"
              >
                Show Bottom Banner
              </Button>
              <Button 
                variant="outline" 
                color="red" 
                onclick="hideBanners()"
              >
                Hide All Banners
              </Button>
            </div>
            
            <p style="color: var(--color-text-secondary); font-size: var(--text-sm);">
              Click the buttons above to test banner positioning and dismissibility. The banners will appear at the top or bottom of the viewport with smooth animations.
            </p>
          </div>

          <!-- Hidden banners that will be shown via JavaScript -->
          <Banner id="test-top-banner" visible={false} visibleAfter={100} position="top" dismissible={true} class="test-banner-top" style="display: none;">
            <p style="margin: 0; text-align: center;">
              <strong>Top Banner:</strong> This is a test banner positioned at the top of the viewport. It can be dismissed by clicking the X button.
            </p>
          </Banner>
          
          <Banner id="test-bottom-banner" visible={false} visibleAfter={100} position="bottom" dismissible={true} class="test-banner-bottom" style="display: none;">
            <p style="margin: 0; text-align: center;">
              <strong>Bottom Banner:</strong> This banner appears at the bottom of the screen. Perfect for cookie notices or important announcements.
            </p>
          </Banner>
        </div>
      </section>

      <!-- Card Test -->
      <section class="stack">
        <h2>Card Component</h2>
        
        <div class="stack">
          <h3>Card Variants</h3>
          <div class="cluster">
            <Card variant="default" padding="md" class="card-demo">
              <div slot="header">
                <h4>Default Card</h4>
              </div>
              <div slot="body">
                <p>This is a default card with standard styling.</p>
              </div>
              <div slot="footer">
                <Button variant="outline" color="blue" size="sm">Learn More</Button>
              </div>
            </Card>
            
            <Card variant="bordered" padding="md" class="card-demo">
              <div slot="header">
                <h4>Bordered Card</h4>
              </div>
              <div slot="body">
                <p>This card has a visible border around it.</p>
              </div>
              <div slot="footer">
                <Button variant="solid" color="green" size="sm">Get Started</Button>
              </div>
            </Card>
            
            <Card variant="shadow" padding="md" class="card-demo">
              <div slot="header">
                <h4>Shadow Card</h4>
              </div>
              <div slot="body">
                <p>This card has a subtle shadow effect.</p>
              </div>
              <div slot="footer">
                <Button variant="solid" color="purple" size="sm">Explore</Button>
              </div>
            </Card>
            
            <Card variant="elevated" padding="md" class="card-demo">
              <div slot="header">
                <h4>Elevated Card</h4>
              </div>
              <div slot="body">
                <p>This card has a more pronounced elevation.</p>
              </div>
              <div slot="footer">
                <Button variant="solid" color="red" size="sm">Try Now</Button>
              </div>
            </Card>
          </div>
        </div>
        
        <div class="stack">
          <h3>Card Padding Options</h3>
          <div class="cluster">
            <Card variant="shadow" padding="sm" class="card-demo">
              <div slot="body">
                <h5>Small Padding</h5>
                <p>Compact card with minimal spacing.</p>
              </div>
            </Card>
            
            <Card variant="shadow" padding="md" class="card-demo">
              <div slot="body">
                <h5>Medium Padding</h5>
                <p>Standard card with normal spacing.</p>
              </div>
            </Card>
            
            <Card variant="shadow" padding="lg" class="card-demo">
              <div slot="body">
                <h5>Large Padding</h5>
                <p>Spacious card with generous spacing.</p>
              </div>
            </Card>
          </div>
        </div>
        
        <div class="stack">
          <h3>Complex Card Example</h3>
          <Card variant="elevated" padding="lg" class="card-demo-wide">
            <div slot="header">
              <div style="display: flex; align-items: center; justify-content: space-between;">
                <div>
                  <h3 style="margin: 0;">Product Dashboard</h3>
                  <p style="margin: var(--space-1) 0 0 0; color: var(--color-text-secondary);">Analytics Overview</p>
                </div>
                <Badge variant="solid" color="green">Live</Badge>
              </div>
            </div>
            <div slot="body">
              <div class="stack">
                <div class="cluster">
                  <div style="text-align: center;">
                    <h4 style="margin: 0; color: var(--color-blue);">1,234</h4>
                    <p style="margin: 0; color: var(--color-text-secondary); font-size: var(--text-sm);">Total Users</p>
                  </div>
                  <div style="text-align: center;">
                    <h4 style="margin: 0; color: var(--color-green);">98.5%</h4>
                    <p style="margin: 0; color: var(--color-text-secondary); font-size: var(--text-sm);">Uptime</p>
                  </div>
                  <div style="text-align: center;">
                    <h4 style="margin: 0; color: var(--color-purple);">156</h4>
                    <p style="margin: 0; color: var(--color-text-secondary); font-size: var(--text-sm);">Active Sessions</p>
                  </div>
                </div>
                <Progress value={78} max={100} color="blue" showLabel={true} />
              </div>
            </div>
            <div slot="footer">
              <div class="cluster">
                <Button variant="solid" color="blue" size="sm">View Details</Button>
                <Button variant="outline" color="neutral" size="sm">Export Data</Button>
                <Button variant="ghost" color="neutral" size="sm">Settings</Button>
              </div>
            </div>
          </Card>
        </div>
      </section>

      <!-- TypingEffect Test -->
      <section class="stack">
        <h2>TypingEffect Component</h2>
        
        <div class="stack">
          <h3>Different Sizes</h3>
          <div class="stack">
            <TypingEffect 
              texts={["Small typing effect", "Compact and subtle", "Perfect for small spaces"]}
              size="sm"
              color="primary"
              typeSpeed={80}
            />
            
            <TypingEffect 
              texts={["Medium typing effect", "Standard size for most content", "Great balance of visibility"]}
              size="md"
              color="blue"
              typeSpeed={100}
            />
            
            <TypingEffect 
              texts={["Large typing effect", "Eye-catching headlines", "Perfect for hero sections"]}
              size="lg"
              color="purple"
              typeSpeed={120}
            />
            
            <TypingEffect 
              texts={["Extra Large Display", "Maximum Impact", "Hero Statement"]}
              size="xl"
              color="green"
              typeSpeed={150}
            />
          </div>
        </div>
        
        <div class="stack">
          <h3>Different Colors</h3>
          <div class="stack">
            <TypingEffect 
              texts={["Primary color theme", "Default brand styling"]}
              color="primary"
              size="md"
            />
            
            <TypingEffect 
              texts={["Secondary color option", "Subtle alternative styling"]}
              color="secondary"
              size="md"
            />
            
            <TypingEffect 
              texts={["Blue accent color", "Professional and trustworthy"]}
              color="blue"
              size="md"
            />
            
            <TypingEffect 
              texts={["Success green color", "Positive and encouraging"]}
              color="green"
              size="md"
            />
            
            <TypingEffect 
              texts={["Warning yellow color", "Attention-grabbing alerts"]}
              color="yellow"
              size="md"
            />
          </div>
        </div>
        
        <div class="stack">
          <h3>Custom Speed Settings</h3>
          <div class="stack">
            <TypingEffect 
              texts={["Fast typing speed", "Quick and snappy", "Great for dynamic content"]}
              typeSpeed={50}
              deleteSpeed={25}
              pauseEnd={1000}
              color="red"
              size="md"
            />
            
            <TypingEffect 
              texts={["Slow deliberate typing", "Thoughtful and measured", "Perfect for emphasis"]}
              typeSpeed={200}
              deleteSpeed={100}
              pauseEnd={3000}
              color="purple"
              size="md"
            />
          </div>
        </div>
      </section>

      <!-- Quotes Test -->
      <section class="stack">
        <h2>Quotes Component</h2>
        
        <div class="stack">
          <h3>Default Quote Style</h3>
          <Quotes 
            quote="This design system has completely transformed our development workflow. The components are intuitive, well-designed, and incredibly easy to implement."
            author="Sarah Johnson"
            role="Lead Developer"
            company="TechCorp"
            size="md"
          />
        </div>
        
        <div class="stack">
          <h3>Centered Quote with Avatar</h3>
          <Quotes 
            quote="The AHA Stack provides the perfect balance of performance and developer experience. It's exactly what we needed for our modern web applications."
            author="Michael Chen"
            role="CTO"
            company="Innovation Labs"
            avatar="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face"
            variant="centered"
            size="lg"
          />
        </div>
        
        <div class="stack">
          <h3>Minimal Quote Style</h3>
          <Quotes 
            quote="Clean, simple, effective. This is how design systems should be built."
            author="Emma Rodriguez"
            role="UI/UX Designer"
            variant="minimal"
            size="md"
          />
        </div>
        
        <div class="stack">
          <h3>Small Quote</h3>
          <Quotes 
            quote="Perfect for smaller testimonials and reviews."
            author="Alex Kim"
            role="Product Manager"
            company="StartupXYZ"
            size="sm"
          />
        </div>
      </section>

      <!-- Form Components Test -->
      <section class="stack">
        <h2>Form Components</h2>
        
        <!-- Text Input Components -->
        <div class="stack">
          <h3>Text Input & Textarea</h3>
          <div class="card card-default card-padding-md">
            <div class="stack">
              <TextInput 
                label="Email Address"
                type="email"
                placeholder="Enter your email"
                description="We'll never share your email with anyone"
                size="md"
                variant="default"
                required={true}
              />
              
              <TextInput 
                label="Large Input"
                placeholder="Large size input"
                size="lg"
                variant="filled"
              />
              
              <TextInput 
                label="Small Input"
                placeholder="Small size input"
                size="sm"
                variant="underlined"
              />
              
              <TextInput 
                label="Error State"
                placeholder="Input with error"
                error="This field is required"
                value="invalid value"
              />
              
              <Textarea 
                label="Message"
                placeholder="Write your message here..."
                description="Maximum 500 characters"
                rows={4}
                variant="default"
              />
              
              <Textarea 
                label="Filled Textarea"
                placeholder="Filled variant"
                variant="filled"
                rows={3}
              />
            </div>
          </div>
        </div>

        <!-- Select Component -->
        <div class="stack">
          <h3>Select Dropdown</h3>
          <div class="card card-default card-padding-md">
            <div class="stack">
              <Select 
                options={[
                  { value: "option1", label: "Option 1" },
                  { value: "option2", label: "Option 2" },
                  { value: "option3", label: "Option 3" },
                  { value: "option4", label: "Option 4", disabled: true },
                  { value: "option5", label: "Option 5" }
                ]}
                placeholder="Choose an option..."
                searchable={true}
                selectedValue="option2"
              />
              
              <Select 
                options={[
                  { value: "red", label: "Red" },
                  { value: "green", label: "Green" },
                  { value: "blue", label: "Blue" }
                ]}
                placeholder="Select a color"
                searchable={false}
              />
            </div>
          </div>
        </div>

        <!-- Checkbox & Switch -->
        <div class="stack">
          <h3>Checkbox & Switch</h3>
          <div class="card card-default card-padding-md">
            <div class="stack">
              <Checkbox 
                id="checkbox-1"
                label="Accept terms and conditions"
                description="You agree to our Terms of Service and Privacy Policy"
                size="md"
                checked={false}
              />
              
              <Checkbox 
                id="checkbox-2"
                label="Small checkbox"
                size="sm"
                checked={true}
              />
              
              <Checkbox 
                id="checkbox-3"
                label="Large checkbox"
                description="This is a larger checkbox variant"
                size="lg"
                checked={false}
              />
              
              <Switch 
                id="switch-1"
                label="Email notifications"
                description="Receive email updates about your account"
                size="md"
                checked={true}
              />
              
              <Switch 
                id="switch-2"
                label="Small switch"
                size="sm"
                checked={false}
              />
              
              <Switch 
                id="switch-3"
                label="Large switch"
                description="Enable advanced features"
                size="lg"
                checked={true}
              />
            </div>
          </div>
        </div>

        <!-- Range Slider -->
        <div class="stack">
          <h3>Range Slider</h3>
          <div class="card card-default card-padding-md">
            <div class="stack">
              <div>
                <h4>Default Range Slider</h4>
                <RangeSlider 
                  min={0}
                  max={100}
                  step={1}
                  value={50}
                  showValue={true}
                  size="md"
                />
              </div>
              
              <div>
                <h4>Small Range Slider</h4>
                <RangeSlider 
                  min={0}
                  max={10}
                  step={0.5}
                  value={7.5}
                  showValue={true}
                  size="sm"
                />
              </div>
              
              <div>
                <h4>Large Range Slider</h4>
                <RangeSlider 
                  min={0}
                  max={500}
                  step={25}
                  value={250}
                  showValue={true}
                  size="lg"
                />
              </div>
            </div>
          </div>
        </div>

        <!-- Radio Group -->
        <div class="stack">
          <h3>Radio Group</h3>
          <div class="card card-default card-padding-md">
            <div class="stack">
              <div>
                <h4>Subscription Plan</h4>
                <RadioGroup 
                  name="plan"
                  options={[
                    { 
                      value: "basic", 
                      title: "Basic Plan", 
                      description: "Perfect for individuals and small teams" 
                    },
                    { 
                      value: "pro", 
                      title: "Pro Plan", 
                      description: "Best for growing businesses with advanced features" 
                    },
                    { 
                      value: "enterprise", 
                      title: "Enterprise Plan", 
                      description: "Complete solution for large organizations" 
                    }
                  ]}
                  selectedValue="pro"
                  size="md"
                />
              </div>
              
              <div>
                <h4>Small Radio Group</h4>
                <RadioGroup 
                  name="size"
                  options={[
                    { value: "small", title: "Small", description: "Compact size option" },
                    { value: "medium", title: "Medium", description: "Standard size option" },
                    { value: "large", title: "Large", description: "Extended size option" }
                  ]}
                  selectedValue="medium"
                  size="sm"
                />
              </div>
            </div>
          </div>
        </div>

        <!-- Form States Demo -->
        <div class="stack">
          <h3>Form States</h3>
          <div class="card card-default card-padding-md">
            <div class="stack">
              <TextInput 
                label="Disabled Input"
                placeholder="This input is disabled"
                disabled={true}
                value="Disabled value"
              />
              
              <TextInput 
                label="Readonly Input"
                placeholder="This input is readonly"
                readonly={true}
                value="Readonly value"
              />
              
              <Checkbox 
                id="disabled-checkbox"
                label="Disabled checkbox"
                disabled={true}
                checked={true}
              />
              
              <Switch 
                id="disabled-switch"
                label="Disabled switch"
                disabled={true}
                checked={false}
              />
            </div>
          </div>
        </div>
      </section>

      <!-- Popover Test -->
      <section class="stack">
        <h2>Popover Component</h2>
        <div class="cluster">
          <!-- Basic click popover -->
          <Popover placement="top" trigger="click" arrow={true}>
            <div slot="trigger">
              <Button variant="solid" color="blue">Click Popover</Button>
            </div>
            <div slot="content">
              <div class="popover-header">Popover Title</div>
              <div class="popover-body">This is the popover content with header.</div>
            </div>
          </Popover>

          <!-- Hover popover -->
          <Popover placement="bottom" trigger="hover" delay={200}>
            <div slot="trigger">
              <Button variant="outline" color="green">Hover Popover</Button>
            </div>
            <div slot="content">
              <div class="popover-body">Hover content appears here!</div>
            </div>
          </Popover>

          <!-- Focus popover -->
          <Popover trigger="focus" placement="right" arrow={true}>
            <input slot="trigger" type="text" placeholder="Focus me" class="input" />
            <div slot="content">
              <div class="popover-body">
                <ul class="stack-sm">
                  <li>• Suggestion 1</li>
                  <li>• Suggestion 2</li>
                  <li>• Suggestion 3</li>
                </ul>
              </div>
            </div>
          </Popover>
        </div>
      </section>

      <!-- SlideOver Test -->
      <section class="stack">
        <h2>SlideOver Component</h2>
        <div class="stack">
          <h3>SlideOver Directions & Sizes</h3>
          <div class="cluster">
            <!-- Right SlideOver -->
            <SlideOver id="slideover-right" side="right" size="md" closeable={true}>
              <div slot="trigger">
                <Button variant="solid" color="blue">Right SlideOver</Button>
              </div>
              <div slot="header">
                <h3 style="color: var(--color-text-primary); font-weight: var(--font-weight-medium); margin: 0;">Right Panel</h3>
                <p style="color: var(--color-text-secondary); font-size: var(--text-sm); margin: var(--space-1) 0 0 0;">This panel slides from the right side</p>
              </div>
              <div slot="body">
                <div class="stack">
                  <p>This is the main content area of the SlideOver component.</p>
                  <p>You can put any content here including forms, lists, or other components.</p>
                  <div class="card card-default card-padding-sm">
                    <p style="margin: 0;">Example nested content in a card</p>
                  </div>
                </div>
              </div>
              <div slot="footer">
                <Button variant="outline" color="neutral" size="sm">Cancel</Button>
                <Button variant="solid" color="blue" size="sm">Save Changes</Button>
              </div>
            </SlideOver>

            <!-- Left SlideOver -->
            <SlideOver id="slideover-left" side="left" size="sm" closeable={true}>
              <div slot="trigger">
                <Button variant="solid" color="green">Left SlideOver</Button>
              </div>
              <div slot="header">
                <h3 style="color: var(--color-text-primary); font-weight: var(--font-weight-medium); margin: 0;">Navigation</h3>
              </div>
              <div slot="body">
                <div class="stack">
                  <a href="#" style="color: var(--color-text-secondary); text-decoration: none; padding: var(--space-2); border-radius: var(--radius-md); transition: background var(--transition-fast);">Home</a>
                  <a href="#" style="color: var(--color-text-secondary); text-decoration: none; padding: var(--space-2); border-radius: var(--radius-md); transition: background var(--transition-fast);">About</a>
                  <a href="#" style="color: var(--color-text-secondary); text-decoration: none; padding: var(--space-2); border-radius: var(--radius-md); transition: background var(--transition-fast);">Services</a>
                  <a href="#" style="color: var(--color-text-secondary); text-decoration: none; padding: var(--space-2); border-radius: var(--radius-md); transition: background var(--transition-fast);">Contact</a>
                </div>
              </div>
            </SlideOver>

            <!-- Top SlideOver -->
            <SlideOver id="slideover-top" side="top" size="lg" closeable={true}>
              <div slot="trigger">
                <Button variant="solid" color="purple">Top SlideOver</Button>
              </div>
              <div slot="header">
                <h3 style="color: var(--color-text-primary); font-weight: var(--font-weight-medium); margin: 0;">Top Panel</h3>
                <p style="color: var(--color-text-secondary); font-size: var(--text-sm); margin: var(--space-1) 0 0 0;">Slides down from the top</p>
              </div>
              <div slot="body">
                <p>This SlideOver opens from the top of the screen and is useful for notifications or quick actions.</p>
              </div>
              <div slot="footer">
                <Button variant="solid" color="purple" size="sm">Got it</Button>
              </div>
            </SlideOver>

            <!-- Bottom SlideOver -->
            <SlideOver id="slideover-bottom" side="bottom" size="md" closeable={true}>
              <div slot="trigger">
                <Button variant="solid" color="yellow">Bottom SlideOver</Button>
              </div>
              <div slot="header">
                <h3 style="color: var(--color-text-primary); font-weight: var(--font-weight-medium); margin: 0;">Bottom Sheet</h3>
              </div>
              <div slot="body">
                <p>This is a bottom sheet style SlideOver, common in mobile interfaces.</p>
                <div class="cluster">
                  <Button variant="soft" color="blue" size="sm">Option 1</Button>
                  <Button variant="soft" color="green" size="sm">Option 2</Button>
                  <Button variant="soft" color="red" size="sm">Option 3</Button>
                </div>
              </div>
            </SlideOver>
          </div>

          <h3>Different Sizes</h3>
          <div class="cluster">
            <SlideOver id="slideover-small" side="right" size="sm" closeable={true}>
              <div slot="trigger">
                <Button variant="outline" color="blue" size="sm">Small (sm)</Button>
              </div>
              <div slot="header">
                <h4 style="margin: 0;">Small Panel</h4>
              </div>
              <div slot="body">
                <p>This is a small panel, good for quick actions or narrow content.</p>
              </div>
            </SlideOver>

            <SlideOver id="slideover-large" side="right" size="lg" closeable={true}>
              <div slot="trigger">
                <Button variant="outline" color="blue" size="sm">Large (lg)</Button>
              </div>
              <div slot="header">
                <h4 style="margin: 0;">Large Panel</h4>
              </div>
              <div slot="body">
                <p>This is a large panel with more space for complex content and forms.</p>
                <div class="stack">
                  <input class="input" type="text" placeholder="Name" />
                  <input class="input" type="email" placeholder="Email" />
                  <textarea class="textarea" placeholder="Message" rows="4"></textarea>
                </div>
              </div>
              <div slot="footer">
                <Button variant="outline" color="neutral" size="sm">Cancel</Button>
                <Button variant="solid" color="blue" size="sm">Send Message</Button>
              </div>
            </SlideOver>

            <SlideOver id="slideover-fullwidth" side="right" size="full" closeable={true}>
              <div slot="trigger">
                <Button variant="outline" color="blue" size="sm">Full Width</Button>
              </div>
              <div slot="header">
                <h4 style="margin: 0;">Full Width Panel</h4>
              </div>
              <div slot="body">
                <p>This panel takes up the full width/height available, useful for detailed forms or complex layouts.</p>
              </div>
            </SlideOver>
          </div>
        </div>
      </section>

      <!-- NavigationMenu Test -->
      <section class="stack">
        <h2>NavigationMenu Component</h2>
        
        <div class="stack">
          <h3>Basic Navigation Menu</h3>
          <div style="border: 1px solid var(--color-border); border-radius: var(--radius-lg); padding: var(--space-4);">
            <NavigationMenu orientation="horizontal" trigger="hover">
              <div slot="brand">
                <a href="/" class="navigation-menu-link">
                  <span class="brand-text">Brand</span>
                </a>
              </div>
              
              <nav slot="menu">
                <ul class="navigation-menu-list navigation-menu-list-horizontal">
                  <li class="navigation-menu-item">
                    <a href="/" class="navigation-menu-link">Home</a>
                  </li>
                  <li class="navigation-menu-item" x-data="{ open: false }" @mouseenter="open = true" @mouseleave="open = false">
                    <button class="navigation-menu-trigger">
                      Products
                      <svg class="nav-chevron" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                      </svg>
                    </button>
                    <div x-show="open" x-transition class="navigation-menu-content">
                      <a href="/products/web" class="navigation-menu-content-item">Web Apps</a>
                      <a href="/products/mobile" class="navigation-menu-content-item">Mobile Apps</a>
                      <a href="/products/desktop" class="navigation-menu-content-item">Desktop Apps</a>
                    </div>
                  </li>
                  <li class="navigation-menu-item">
                    <a href="/about" class="navigation-menu-link">About</a>
                  </li>
                  <li class="navigation-menu-item">
                    <a href="/contact" class="navigation-menu-link">Contact</a>
                  </li>
                </ul>
              </nav>
              
              <div slot="actions">
                <Button variant="solid" color="blue" size="sm">Get Started</Button>
              </div>
            </NavigationMenu>
          </div>

          <h3>Responsive Navigation Menu (Test on mobile)</h3>
          <div style="border: 1px solid var(--color-border); border-radius: var(--radius-lg); padding: var(--space-4);">
            <NavigationMenu responsive={true}>
              <div slot="brand">
                <a href="/" class="navigation-menu-link">
                  <span class="brand-text">Responsive Brand</span>
                </a>
              </div>
              
              <nav slot="menu">
                <ul class="navigation-menu-list navigation-menu-list-horizontal">
                  <li class="navigation-menu-item">
                    <a href="/" class="navigation-menu-link">Home</a>
                  </li>
                  <li class="navigation-menu-item">
                    <a href="/services" class="navigation-menu-link">Services</a>
                  </li>
                  <li class="navigation-menu-item">
                    <a href="/portfolio" class="navigation-menu-link">Portfolio</a>
                  </li>
                  <li class="navigation-menu-item">
                    <a href="/contact" class="navigation-menu-link">Contact</a>
                  </li>
                </ul>
              </nav>
              
              <div slot="actions">
                <Button variant="outline" color="blue" size="sm">Login</Button>
                <Button variant="solid" color="blue" size="sm">Sign Up</Button>
              </div>
            </NavigationMenu>
          </div>
        </div>
      </section>

      <!-- MenuBar Test -->
      <section class="stack">
        <h2>MenuBar Component</h2>
        
        <div class="stack">
          <h3>Web Style MenuBar</h3>
          <MenuBar 
            variant="web"
            items={[
              {
                label: 'File',
                items: [
                  { label: 'New', shortcut: 'Cmd+N', action: 'newFile' },
                  { label: 'Open', shortcut: 'Cmd+O', action: 'openFile' },
                  { separator: true },
                  { label: 'Save', shortcut: 'Cmd+S', action: 'saveFile' },
                  { label: 'Save As...', shortcut: 'Cmd+Shift+S', action: 'saveAsFile' },
                  { separator: true },
                  { label: 'Export', disabled: true },
                  { label: 'Print', shortcut: 'Cmd+P', action: 'printFile' }
                ]
              },
              {
                label: 'Edit',
                items: [
                  { label: 'Undo', shortcut: 'Cmd+Z', action: 'undo' },
                  { label: 'Redo', shortcut: 'Cmd+Shift+Z', action: 'redo' },
                  { separator: true },
                  { label: 'Cut', shortcut: 'Cmd+X', action: 'cut' },
                  { label: 'Copy', shortcut: 'Cmd+C', action: 'copy' },
                  { label: 'Paste', shortcut: 'Cmd+V', action: 'paste' }
                ]
              },
              {
                label: 'View',
                items: [
                  { label: 'Zoom In', shortcut: 'Cmd++', action: 'zoomIn' },
                  { label: 'Zoom Out', shortcut: 'Cmd+-', action: 'zoomOut' },
                  { label: 'Reset Zoom', shortcut: 'Cmd+0', action: 'resetZoom' },
                  { separator: true },
                  { label: 'Toggle Sidebar', shortcut: 'Cmd+B', action: 'toggleSidebar' }
                ]
              },
              {
                label: 'Help',
                items: [
                  { label: 'Documentation', action: 'openDocs' },
                  { label: 'Keyboard Shortcuts', shortcut: 'Cmd+/', action: 'showShortcuts' },
                  { separator: true },
                  { label: 'About', action: 'showAbout' }
                ]
              }
            ]}
          />
          
          <h3>Desktop Style MenuBar</h3>
          <MenuBar 
            variant="desktop"
            items={[
              {
                label: 'File',
                items: [
                  { label: 'New Document', shortcut: 'Ctrl+N' },
                  { label: 'Open...', shortcut: 'Ctrl+O' },
                  { separator: true },
                  { label: 'Save', shortcut: 'Ctrl+S' },
                  { label: 'Save As...', shortcut: 'Ctrl+Shift+S' },
                  { separator: true },
                  { label: 'Recent Files', disabled: true },
                  { separator: true },
                  { label: 'Exit', shortcut: 'Alt+F4' }
                ]
              },
              {
                label: 'Edit',
                items: [
                  { label: 'Undo', shortcut: 'Ctrl+Z' },
                  { label: 'Redo', shortcut: 'Ctrl+Y' },
                  { separator: true },
                  { label: 'Find', shortcut: 'Ctrl+F' },
                  { label: 'Replace', shortcut: 'Ctrl+H' }
                ]
              },
              {
                label: 'Tools',
                items: [
                  { label: 'Preferences', shortcut: 'Ctrl+,' },
                  { label: 'Extensions' },
                  { separator: true },
                  { label: 'Terminal', shortcut: 'Ctrl+`' }
                ]
              }
            ]}
          />
        </div>
      </section>

      <!-- Dropdown Test -->
      <section class="stack">
        <h2>Dropdown Component</h2>
        
        <div class="cluster">
          <Dropdown placement="bottom-start">
            <div slot="trigger">
              <Button variant="outline" color="neutral">Account Menu</Button>
            </div>
            <div slot="menu">
              <div class="dropdown-header">Account</div>
              <a href="#" class="dropdown-item">
                <svg class="dropdown-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                Profile
              </a>
              <a href="#" class="dropdown-item">
                <svg class="dropdown-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                Settings
              </a>
              <div class="dropdown-separator"></div>
              <a href="#" class="dropdown-item dropdown-item-danger">
                <svg class="dropdown-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                </svg>
                Sign out
              </a>
            </div>
          </Dropdown>

          <Dropdown placement="bottom-end">
            <div slot="trigger">
              <Button variant="solid" color="blue">Options ▼</Button>
            </div>
            <div slot="menu">
              <a href="#" class="dropdown-item">Edit</a>
              <a href="#" class="dropdown-item">Duplicate</a>
              <a href="#" class="dropdown-item">Share</a>
              <div class="dropdown-separator"></div>
              <a href="#" class="dropdown-item dropdown-item-danger">Delete</a>
            </div>
          </Dropdown>
        </div>
      </section>

      <!-- RetroGrid Test -->
      <section class="stack">
        <h2>RetroGrid Component</h2>
        <div class="stack">
          <h3>Animated RetroGrid (Default)</h3>
          <div style="height: 300px; position: relative; border: 1px solid var(--color-border); border-radius: var(--radius-lg); overflow: hidden;">
            <RetroGrid angle={60} animated={true}>
              <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: var(--color-text-primary); font-weight: var(--font-weight-bold); text-align: center;">
                <div>
                  <h4>Retro Grid Background</h4>
                  <p>Content overlay on animated grid</p>
                </div>
              </div>
            </RetroGrid>
          </div>

          <h3>Static RetroGrid (No Animation)</h3>
          <div style="height: 300px; position: relative; border: 1px solid var(--color-border); border-radius: var(--radius-lg); overflow: hidden;">
            <RetroGrid angle={45} animated={false}>
              <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: var(--color-text-primary); font-weight: var(--font-weight-bold); text-align: center;">
                <div>
                  <h4>Static Grid</h4>
                  <p>No animation, different angle</p>
                </div>
              </div>
            </RetroGrid>
          </div>
        </div>
      </section>

      <!-- TextAnimation Test -->
      <section class="stack">
        <h2>TextAnimation Component</h2>
        <div class="stack">
          <h3>Animation Types</h3>
          <div class="stack">
            <div class="cluster">
              <strong>Fade:</strong>
              <TextAnimation 
                text="Hello World!" 
                animation="fade" 
                stagger={0.1}
                duration={0.5}
                autoStart={true}
              />
            </div>
            
            <div class="cluster">
              <strong>Slide:</strong>
              <TextAnimation 
                text="Welcome to AHA Stack!" 
                animation="slide" 
                stagger={0.05}
                duration={0.6}
                autoStart={true}
              />
            </div>
            
            <div class="cluster">
              <strong>Scale:</strong>
              <TextAnimation 
                text="Design System Rocks" 
                animation="scale" 
                stagger={0.08}
                duration={0.4}
                autoStart={true}
              />
            </div>
            
            <div class="cluster">
              <strong>Bounce:</strong>
              <TextAnimation 
                text="Bouncy Text!" 
                animation="bounce" 
                stagger={0.1}
                duration={0.8}
                autoStart={true}
              />
            </div>
          </div>

          <h3>Manual Control</h3>
          <div class="stack">
            <div class="cluster">
              <TextAnimation 
                text="Click to animate me!" 
                animation="fade" 
                stagger={0.1}
                duration={0.5}
                autoStart={false}
                class="manual-animation"
              />
              <Button variant="solid" color="blue" onclick="document.querySelector('.manual-animation').dispatchEvent(new CustomEvent('startAnimation'))">
                Start Animation
              </Button>
            </div>
          </div>
        </div>
      </section>

      <!-- CopyToClipboard Test -->
      <section class="stack">
        <h2>CopyToClipboard Component</h2>
        <div class="stack">
          <h3>Button Variant</h3>
          <div class="cluster">
            <CopyToClipboard 
              text="Hello, this is text to copy!"
              variant="button"
              successMessage="Successfully copied!"
              errorMessage="Copy failed!"
            />
            <CopyToClipboard 
              text="npm install aha-stack"
              variant="button"
              successMessage="Command copied!"
            />
          </div>

          <h3>Icon Variant</h3>
          <div class="cluster">
            <CopyToClipboard 
              text="This text will be copied when you click the icon"
              variant="icon"
            />
            <CopyToClipboard 
              text="git clone https://github.com/example/repo.git"
              variant="icon"
              successMessage="Git command copied!"
            />
          </div>

          <h3>Custom Styling</h3>
          <div class="cluster">
            <CopyToClipboard 
              text="Custom styled copy button"
              variant="button"
              class="custom-copy-button"
            />
          </div>
        </div>
      </section>

      <!-- Pagination Test -->
      <section class="stack">
        <h2>Pagination Component</h2>
        
        <div class="stack">
          <h3>Basic Pagination</h3>
          <Pagination 
            currentPage={3}
            totalPages={10}
            totalItems={89}
            itemsPerPage={10}
            showInfo={true}
            baseUrl="/test?page="
          />

          <h3>Large Dataset Pagination</h3>
          <Pagination 
            currentPage={15}
            totalPages={50}
            totalItems={500}
            itemsPerPage={10}
            showInfo={true}
            showFirstLast={true}
            maxVisible={7}
            baseUrl="/products?page="
          />

          <h3>Simple Pagination (No Info)</h3>
          <Pagination 
            currentPage={2}
            totalPages={5}
            totalItems={25}
            itemsPerPage={5}
            showInfo={false}
            showFirstLast={false}
            baseUrl="/blog?page="
          />
        </div>
      </section>

      <!-- Breadcrumbs Test -->
      <section class="stack">
        <h2>Breadcrumbs Component</h2>
        
        <div class="stack">
          <h3>Chevron Separator</h3>
          <Breadcrumbs 
            items={[
              { label: "Dashboard", href: "/dashboard" },
              { label: "Users", href: "/users" },
              { label: "Profile Settings", current: true }
            ]}
            separator="chevron"
            showHome={true}
          />

          <h3>Slash Separator</h3>
          <Breadcrumbs 
            items={[
              { label: "Products", href: "/products" },
              { label: "Electronics", href: "/products/electronics" },
              { label: "Laptops", href: "/products/electronics/laptops" },
              { label: "MacBook Pro", current: true }
            ]}
            separator="slash"
            showHome={true}
          />

          <h3>Dot Separator (No Home)</h3>
          <Breadcrumbs 
            items={[
              { label: "Blog", href: "/blog" },
              { label: "Technology", href: "/blog/technology" },
              { label: "Web Development", current: true }
            ]}
            separator="dot"
            showHome={false}
          />
        </div>
      </section>

      <!-- Tabs Test -->
      <section class="stack">
        <h2>Tabs Component</h2>
        
        <div class="stack">
          <h3>Underline Tabs</h3>
          <Tabs 
            tabs={[
              { id: "overview", label: "Overview", content: "<p>This is the overview content section. Here you can see general information about the product or service.</p>" },
              { id: "features", label: "Features", content: "<p>Feature list and detailed descriptions would go here. This tab contains all the important features.</p>" },
              { id: "pricing", label: "Pricing", content: "<p>Pricing information and plans would be displayed in this section.</p>" },
              { id: "support", label: "Support", disabled: true }
            ]}
            defaultTab="overview"
            variant="underline"
          />

          <h3>Pills Tabs</h3>
          <Tabs 
            tabs={[
              { id: "profile", label: "Profile", content: "<div class='stack'><p><strong>User Profile</strong></p><p>Personal information and settings.</p></div>" },
              { id: "account", label: "Account", content: "<div class='stack'><p><strong>Account Settings</strong></p><p>Billing and subscription management.</p></div>" },
              { id: "security", label: "Security", content: "<div class='stack'><p><strong>Security Settings</strong></p><p>Password and two-factor authentication.</p></div>" }
            ]}
            defaultTab="profile"
            variant="pills"
          />

          <h3>Enclosed Tabs</h3>
          <Tabs 
            tabs={[
              { id: "code", label: "Code", content: "<pre style='background: var(--color-surface); padding: var(--space-4); border-radius: var(--radius-md); overflow-x: auto;'><code>function hello() {\n  console.log('Hello World!');\n}</code></pre>" },
              { id: "preview", label: "Preview", content: "<div style='padding: var(--space-4); background: var(--color-surface); border-radius: var(--radius-md);'><button class='button button-solid-blue button-sm'>Hello World!</button></div>" },
              { id: "docs", label: "Documentation", content: "<p>Component documentation and usage examples would be displayed here.</p>" }
            ]}
            defaultTab="code"
            variant="enclosed"
          />
        </div>
      </section>

      <!-- Modal Test -->
      <section class="stack">
        <h2>Modal Component</h2>
        <div class="cluster">
          <!-- Basic Modal -->
          <Modal id="basic-modal" size="md" closeable={true}>
            <div slot="trigger">
              <Button variant="solid" color="blue">Open Basic Modal</Button>
            </div>
            <div slot="header">
              <h3 style="margin: 0; color: var(--color-text-primary);">Basic Modal</h3>
            </div>
            <div slot="body">
              <p>This is a basic modal with header, body, and footer. It can be closed by clicking outside, pressing escape, or using the close button.</p>
              <div class="stack-sm">
                <input class="input" type="text" placeholder="Sample input" />
                <textarea class="textarea" placeholder="Sample textarea" rows="3"></textarea>
              </div>
            </div>
            <div slot="footer">
              <Button variant="outline" color="neutral" size="sm">Cancel</Button>
              <Button variant="solid" color="blue" size="sm">Save</Button>
            </div>
          </Modal>

          <!-- Different Sizes -->
          <Modal id="small-modal" size="sm" closeable={true}>
            <div slot="trigger">
              <Button variant="outline" color="green" size="sm">Small Modal</Button>
            </div>
            <div slot="header">
              <h4 style="margin: 0;">Small Modal</h4>
            </div>
            <div slot="body">
              <p>This is a small modal, perfect for quick confirmations.</p>
            </div>
            <div slot="footer">
              <Button variant="solid" color="green" size="sm">Confirm</Button>
            </div>
          </Modal>

          <Modal id="large-modal" size="lg" closeable={true}>
            <div slot="trigger">
              <Button variant="outline" color="purple" size="sm">Large Modal</Button>
            </div>
            <div slot="header">
              <h3 style="margin: 0;">Large Modal</h3>
            </div>
            <div slot="body">
              <div class="stack">
                <p>This is a large modal with more space for complex content.</p>
                <div class="card card-default card-padding-md">
                  <h4>Form Example</h4>
                  <div class="stack">
                    <input class="input" type="text" placeholder="Name" />
                    <input class="input" type="email" placeholder="Email" />
                    <select class="select">
                      <option>Choose option</option>
                      <option>Option 1</option>
                      <option>Option 2</option>
                    </select>
                    <textarea class="textarea" placeholder="Message" rows="4"></textarea>
                  </div>
                </div>
              </div>
            </div>
            <div slot="footer">
              <Button variant="outline" color="neutral">Cancel</Button>
              <Button variant="solid" color="purple">Submit</Button>
            </div>
          </Modal>

          <!-- Non-closeable Modal -->
          <Modal id="required-modal" size="md" closeable={false}>
            <div slot="trigger">
              <Button variant="solid" color="red" size="sm">Required Action</Button>
            </div>
            <div slot="header">
              <h3 style="margin: 0;">Required Action</h3>
            </div>
            <div slot="body">
              <p>This modal cannot be closed by clicking outside or pressing escape. You must complete the action.</p>
            </div>
            <div slot="footer">
              <Button variant="solid" color="red">Complete Action</Button>
            </div>
          </Modal>
        </div>
      </section>

      <!-- Toast Test -->
      <section class="stack">
        <h2>Toast Component</h2>
        <div class="stack">
          <h3>Toast Variants</h3>
          <div class="cluster">
            <Button 
              variant="solid" 
              color="green" 
              onclick="showToast('success', 'Success!', 'Your action was completed successfully.')"
            >
              Success Toast
            </Button>
            <Button 
              variant="solid" 
              color="red" 
              onclick="showToast('error', 'Error!', 'Something went wrong. Please try again.')"
            >
              Error Toast
            </Button>
            <Button 
              variant="solid" 
              color="yellow" 
              onclick="showToast('warning', 'Warning!', 'Please review your input before proceeding.')"
            >
              Warning Toast
            </Button>
            <Button 
              variant="solid" 
              color="blue" 
              onclick="showToast('info', 'Information', 'Here is some helpful information for you.')"
            >
              Info Toast
            </Button>
            <Button 
              variant="outline" 
              color="neutral" 
              onclick="showToast('default', 'Default', 'This is a default toast notification.')"
            >
              Default Toast
            </Button>
          </div>

          <h3>Toast Positions</h3>
          <div class="cluster">
            <Button 
              variant="soft" 
              color="blue" 
              size="sm"
              onclick="showPositionalToast('top-right', 'Top Right')"
            >
              Top Right
            </Button>
            <Button 
              variant="soft" 
              color="blue" 
              size="sm"
              onclick="showPositionalToast('top-left', 'Top Left')"
            >
              Top Left
            </Button>
            <Button 
              variant="soft" 
              color="blue" 
              size="sm"
              onclick="showPositionalToast('bottom-right', 'Bottom Right')"
            >
              Bottom Right
            </Button>
            <Button 
              variant="soft" 
              color="blue" 
              size="sm"
              onclick="showPositionalToast('bottom-left', 'Bottom Left')"
            >
              Bottom Left
            </Button>
            <Button 
              variant="soft" 
              color="blue" 
              size="sm"
              onclick="showPositionalToast('top-center', 'Top Center')"
            >
              Top Center
            </Button>
            <Button 
              variant="soft" 
              color="blue" 
              size="sm"
              onclick="showPositionalToast('bottom-center', 'Bottom Center')"
            >
              Bottom Center
            </Button>
          </div>
        </div>
      </section>

      <!-- Tooltip Test -->
      <section class="stack">
        <h2>Tooltip Component</h2>
        <div class="stack">
          <h3>Tooltip Positions</h3>
          <div class="cluster">
            <Tooltip content="This tooltip appears on top" position="top">
              <Button variant="outline" color="blue" size="sm">Top Tooltip</Button>
            </Tooltip>
            <Tooltip content="This tooltip appears on the right" position="right">
              <Button variant="outline" color="green" size="sm">Right Tooltip</Button>
            </Tooltip>
            <Tooltip content="This tooltip appears at the bottom" position="bottom">
              <Button variant="outline" color="purple" size="sm">Bottom Tooltip</Button>
            </Tooltip>
            <Tooltip content="This tooltip appears on the left" position="left">
              <Button variant="outline" color="yellow" size="sm">Left Tooltip</Button>
            </Tooltip>
          </div>

          <h3>Tooltip with Delay</h3>
          <div class="cluster">
            <Tooltip content="This tooltip has a 500ms delay" position="top" delay={500}>
              <Button variant="soft" color="blue" size="sm">Delayed Tooltip</Button>
            </Tooltip>
            <Tooltip content="This tooltip has no arrow" position="bottom" showArrow={false}>
              <Button variant="soft" color="green" size="sm">No Arrow</Button>
            </Tooltip>
          </div>

          <h3>Tooltips on Different Elements</h3>
          <div class="cluster">
            <Tooltip content="Input field tooltip" position="top">
              <input class="input" type="text" placeholder="Hover for tooltip" style="width: 200px;" />
            </Tooltip>
            <Tooltip content="Select dropdown tooltip" position="bottom">
              <select class="select" style="width: 150px;">
                <option>Select option</option>
                <option>Option 1</option>
                <option>Option 2</option>
              </select>
            </Tooltip>
            <Tooltip content="This text has a helpful tooltip" position="top">
              <span style="text-decoration: underline; cursor: help; color: var(--color-primary);">
                Hover this text
              </span>
            </Tooltip>
          </div>
        </div>
      </section>

      <!-- Accordion Test -->
      <section class="stack">
        <h2>Accordion Component</h2>
        
        <div class="stack">
          <h3>Basic Accordion</h3>
          <Accordion 
            items={[
              { 
                title: "What is the AHA Stack?", 
                content: "The AHA Stack combines Astro, HTMX, and Alpine.js to create fast, interactive web applications with minimal JavaScript overhead." 
              },
              { 
                title: "How does Alpine.js work?", 
                content: "Alpine.js provides reactive functionality directly in your HTML using x-data, x-show, x-if and other directives. It's lightweight and perfect for enhancing server-rendered content." 
              },
              { 
                title: "Why use Astro?", 
                content: "Astro generates static HTML by default and only hydrates components that need interactivity. This results in faster loading times and better SEO performance." 
              },
              { 
                title: "What about HTMX?", 
                content: "HTMX allows you to access modern browser features like AJAX, CSS Transitions, WebSockets and Server Sent Events directly from HTML, without writing JavaScript." 
              }
            ]}
          />
        </div>
        
        <div class="stack">
          <h3>FAQ Accordion</h3>
          <Accordion 
            items={[
              { 
                title: "How do I get started?", 
                content: "Clone the repository, install dependencies with npm install, and start the development server with npm run dev." 
              },
              { 
                title: "Is this production ready?", 
                content: "Yes! The AHA Stack is built on mature, production-tested technologies. Many companies use similar architectures for their web applications." 
              },
              { 
                title: "Can I customize the components?", 
                content: "Absolutely! All components are built with CSS custom properties and can be easily customized to match your brand and design requirements." 
              }
            ]}
          />
        </div>
      </section>

      <!-- Badge Test -->
      <section class="stack">
        <h2>Badge Component</h2>
        
        <div class="stack">
          <h3>Badge Variants</h3>
          <div class="cluster">
            <Badge variant="solid" color="blue">New</Badge>
            <Badge variant="solid" color="green">Active</Badge>
            <Badge variant="solid" color="red">Error</Badge>
            <Badge variant="solid" color="yellow">Warning</Badge>
            <Badge variant="solid" color="purple">Premium</Badge>
            <Badge variant="solid" color="gray">Draft</Badge>
          </div>
          
          <div class="cluster">
            <Badge variant="soft" color="blue">Info</Badge>
            <Badge variant="soft" color="green">Success</Badge>
            <Badge variant="soft" color="red">Danger</Badge>
            <Badge variant="soft" color="yellow">Caution</Badge>
            <Badge variant="soft" color="purple">Featured</Badge>
            <Badge variant="soft" color="gray">Inactive</Badge>
          </div>
          
          <div class="cluster">
            <Badge variant="outline" color="blue">Beta</Badge>
            <Badge variant="outline" color="green">Verified</Badge>
            <Badge variant="outline" color="red">Urgent</Badge>
            <Badge variant="outline" color="yellow">Pending</Badge>
            <Badge variant="outline" color="purple">Pro</Badge>
            <Badge variant="outline" color="gray">Archived</Badge>
          </div>
          
          <div class="cluster">
            <Badge variant="dot" color="blue">Online</Badge>
            <Badge variant="dot" color="green">Available</Badge>
            <Badge variant="dot" color="red">Busy</Badge>
            <Badge variant="dot" color="yellow">Away</Badge>
            <Badge variant="dot" color="gray">Offline</Badge>
          </div>
        </div>
        
        <div class="stack">
          <h3>Badge Sizes</h3>
          <div class="cluster">
            <Badge variant="solid" color="blue" size="sm">Small</Badge>
            <Badge variant="solid" color="blue" size="md">Medium</Badge>
            <Badge variant="solid" color="blue" size="lg">Large</Badge>
          </div>
        </div>
        
        <div class="stack">
          <h3>Contextual Usage</h3>
          <div class="cluster">
            <div style="display: flex; align-items: center; gap: var(--space-2);">
              <span>John Doe</span>
              <Badge variant="dot" color="green">Online</Badge>
            </div>
            <div style="display: flex; align-items: center; gap: var(--space-2);">
              <span>New Feature</span>
              <Badge variant="solid" color="blue" size="sm">Beta</Badge>
            </div>
            <div style="display: flex; align-items: center; gap: var(--space-2);">
              <span>Task #123</span>
              <Badge variant="outline" color="red" size="sm">High Priority</Badge>
            </div>
          </div>
        </div>
      </section>

      <!-- Progress Test -->
      <section class="stack">
        <h2>Progress Component</h2>
        
        <div class="stack">
          <h3>Basic Progress Bars</h3>
          <div class="stack">
            <Progress value={25} max={100} color="blue" showLabel={true} />
            <Progress value={50} max={100} color="green" showLabel={true} />
            <Progress value={75} max={100} color="purple" showLabel={true} />
            <Progress value={90} max={100} color="red" showLabel={true} />
          </div>
        </div>
        
        <div class="stack">
          <h3>Animated & Striped Progress</h3>
          <div class="stack">
            <Progress value={60} max={100} color="blue" animated={true} striped={true} showLabel={true} />
            <Progress value={40} max={100} color="green" striped={true} showLabel={true} />
            <Progress value={80} max={100} color="yellow" animated={true} showLabel={true} />
          </div>
        </div>
        
        <div class="stack">
          <h3>Progress Sizes</h3>
          <div class="stack">
            <Progress value={70} max={100} color="blue" size="sm" showLabel={true} />
            <Progress value={70} max={100} color="green" size="md" showLabel={true} />
            <Progress value={70} max={100} color="purple" size="lg" showLabel={true} />
          </div>
        </div>
        
        <div class="stack">
          <h3>Auto-Increment Progress</h3>
          <div class="stack">
            <Progress autoIncrement={true} incrementInterval={50} color="blue" showLabel={true} />
            <p style="color: var(--color-text-secondary); font-size: var(--text-sm);">This progress bar automatically increments and includes a reset button.</p>
          </div>
        </div>
      </section>

      <!-- Rating Test -->
      <section class="stack">
        <h2>Rating Component</h2>
        
        <div class="stack">
          <h3>Interactive Rating</h3>
          <div class="cluster">
            <Rating maxStars={5} initialValue={0} size="sm" name="rating-small" />
            <Rating maxStars={5} initialValue={2} size="md" name="rating-medium" />
            <Rating maxStars={5} initialValue={4} size="lg" name="rating-large" />
          </div>
        </div>
        
        <div class="stack">
          <h3>Readonly Rating (Display Only)</h3>
          <div class="cluster">
            <Rating maxStars={5} initialValue={5} readonly={true} size="md" />
            <Rating maxStars={5} initialValue={3} readonly={true} size="md" />
            <Rating maxStars={5} initialValue={1} readonly={true} size="md" />
          </div>
        </div>
        
        <div class="stack">
          <h3>Custom Star Count</h3>
          <div class="cluster">
            <Rating maxStars={3} initialValue={2} size="md" />
            <Rating maxStars={10} initialValue={7} size="sm" />
          </div>
        </div>
        
        <div class="stack">
          <h3>Disabled State</h3>
          <div class="cluster">
            <Rating maxStars={5} initialValue={3} disabled={true} size="md" />
          </div>
        </div>
      </section>

      <!-- Table Test -->
      <section class="stack">
        <h2>Table Component</h2>
        
        <div class="stack">
          <h3>Basic Table</h3>
          <Table 
            headers={['Name', 'Email', 'Role', 'Status']}
            rows={[
              ['John Doe', 'john@example.com', 'Admin', 'Active'],
              ['Jane Smith', 'jane@example.com', 'Editor', 'Active'],
              ['Bob Johnson', 'bob@example.com', 'User', 'Inactive'],
              ['Alice Brown', 'alice@example.com', 'Moderator', 'Active']
            ]}
          />
        </div>
        
        <div class="stack">
          <h3>Striped Table with Hover</h3>
          <Table 
            headers={['Product', 'Price', 'Stock', 'Category']}
            rows={[
              ['Laptop Pro', '$1,299', '15', 'Electronics'],
              ['Wireless Mouse', '$29', '50', 'Accessories'],
              ['Keyboard', '$79', '25', 'Accessories'],
              ['Monitor 27"', '$299', '8', 'Electronics'],
              ['USB Cable', '$15', '100', 'Accessories']
            ]}
            striped={true}
            hover={true}
          />
        </div>
        
        <div class="stack">
          <h3>Bordered Compact Table</h3>
          <Table 
            headers={['ID', 'Task', 'Priority', 'Due Date']}
            rows={[
              ['#001', 'Fix login bug', 'High', '2024-01-15'],
              ['#002', 'Update documentation', 'Medium', '2024-01-20'],
              ['#003', 'Add new feature', 'Low', '2024-01-25'],
              ['#004', 'Code review', 'High', '2024-01-12']
            ]}
            bordered={true}
            compact={true}
            hover={true}
          />
        </div>
      </section>

      <!-- Marquee Test -->
      <section class="stack">
        <h2>Marquee Component</h2>
        
        <div class="stack">
          <h3>Basic Marquee (Left)</h3>
          <Marquee direction="left" speed="normal" pauseOnHover={true}>
            <div class="cluster">
              <Badge variant="solid" color="blue">New Feature</Badge>
              <Badge variant="solid" color="green">Bug Fix</Badge>
              <Badge variant="solid" color="purple">Enhancement</Badge>
              <Badge variant="solid" color="red">Critical Update</Badge>
              <Badge variant="solid" color="yellow">Performance</Badge>
              <Badge variant="solid" color="gray">Documentation</Badge>
            </div>
          </Marquee>
        </div>
        
        <div class="stack">
          <h3>Right Direction (Fast Speed)</h3>
          <Marquee direction="right" speed="fast" pauseOnHover={true}>
            <div style="display: flex; gap: var(--space-4); align-items: center;">
              <span>🚀 New release available</span>
              <span>💡 Check out our latest features</span>
              <span>🔧 Performance improvements</span>
              <span>📚 Updated documentation</span>
              <span>🎉 Join our community</span>
            </div>
          </Marquee>
        </div>
        
        <div class="stack">
          <h3>Slow Speed (No Pause)</h3>
          <Marquee direction="left" speed="slow" pauseOnHover={false}>
            <div style="display: flex; gap: var(--space-6); align-items: center;">
              <div style="display: flex; align-items: center; gap: var(--space-2);">
                <span style="font-weight: var(--font-weight-bold);">Apple Inc</span>
                <span style="color: var(--color-text-secondary);">$150.25</span>
                <span style="color: var(--color-green);">+2.3%</span>
              </div>
              <div style="display: flex; align-items: center; gap: var(--space-2);">
                <span style="font-weight: var(--font-weight-bold);">Google</span>
                <span style="color: var(--color-text-secondary);">$2,800.75</span>
                <span style="color: var(--color-red);">-1.2%</span>
              </div>
              <div style="display: flex; align-items: center; gap: var(--space-2);">
                <span style="font-weight: var(--font-weight-bold);">Microsoft</span>
                <span style="color: var(--color-text-secondary);">$380.45</span>
                <span style="color: var(--color-green);">+0.8%</span>
              </div>
            </div>
          </Marquee>
        </div>
      </section>

      <!-- Command Test -->
      <section class="stack">
        <h2>Command Component</h2>
        
        <div class="stack">
          <h3>Command Palette</h3>
          <p style="color: var(--color-text-secondary); margin-bottom: var(--space-4);">
            Press <kbd style="padding: var(--space-1) var(--space-2); background: var(--color-surface); border: 1px solid var(--color-border); border-radius: var(--radius-sm); font-size: var(--text-sm);">⌘K</kbd> or <kbd style="padding: var(--space-1) var(--space-2); background: var(--color-surface); border: 1px solid var(--color-border); border-radius: var(--radius-sm); font-size: var(--text-sm);">Ctrl+K</kbd> to open the command palette, or click the button below.
          </p>
          
          <Command 
            placeholder="Search commands or press ⌘K..." 
            @command-selected="alert('Command selected: ' + $event.detail.text)"
          >
            <div slot="trigger">
              <Button variant="outline" color="blue">Open Command Palette</Button>
            </div>
            
            <div slot="commands">
              <div data-group="Navigation">
                <div data-command="home" data-keywords="home dashboard main page" data-shortcut="⌘H">
                  <span>Go to Home</span>
                </div>
                <div data-command="design-system" data-keywords="design system components ui" data-shortcut="⌘D">
                  <span>View Design System</span>
                </div>
                <div data-command="profile" data-keywords="profile user account settings" data-shortcut="⌘P">
                  <span>View Profile</span>
                </div>
                <div data-command="settings" data-keywords="settings preferences config" data-shortcut="⌘,">
                  <span>Open Settings</span>
                </div>
              </div>
              
              <div data-group="Actions">
                <div data-command="create" data-keywords="create new add post article document" data-shortcut="⌘N">
                  <span>Create New Document</span>
                </div>
                <div data-command="save" data-keywords="save document file" data-shortcut="⌘S">
                  <span>Save Document</span>
                </div>
                <div data-command="copy" data-keywords="copy duplicate clone" data-shortcut="⌘C">
                  <span>Copy to Clipboard</span>
                </div>
                <div data-command="search" data-keywords="search find lookup" data-shortcut="⌘F">
                  <span>Search Content</span>
                </div>
              </div>
              
              <div data-group="Tools">
                <div data-command="theme" data-keywords="theme dark light mode toggle" data-shortcut="⌘T">
                  <span>Toggle Theme</span>
                </div>
                <div data-command="help" data-keywords="help documentation support" data-shortcut="⌘?">
                  <span>Show Help</span>
                </div>
                <div data-command="shortcuts" data-keywords="shortcuts keyboard commands" data-shortcut="⌘/">
                  <span>Keyboard Shortcuts</span>
                </div>
              </div>
            </div>
          </Command>
        </div>
      </section>

      <!-- ContextMenu Test -->
      <section class="stack">
        <h2>ContextMenu Component</h2>
        
        <div class="stack">
          <h3>Right-Click Context Menu</h3>
          <ContextMenu 
            trigger="right-click"
            @context-menu-item-click="alert('Context menu item clicked: ' + $event.detail.text)"
          >
            <div slot="trigger" style="padding: var(--space-6); background: var(--color-surface); border: 2px dashed var(--color-border); border-radius: var(--radius-lg); text-align: center; cursor: pointer;">
              <h4>Right-click me!</h4>
              <p style="color: var(--color-text-secondary); margin: 0;">Try right-clicking this area to see the context menu.</p>
            </div>
            
            <div slot="menu">
              <div class="context-menu-content">
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                  Edit Item
                </a>
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                  </svg>
                  Copy
                </a>
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                  Duplicate
                </a>
                <hr class="context-menu-separator">
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                  </svg>
                  Download
                </a>
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
                  </svg>
                  Share
                </a>
                <hr class="context-menu-separator">
                <a href="#" class="context-menu-item context-menu-item-danger">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                  </svg>
                  Delete
                </a>
              </div>
            </div>
          </ContextMenu>
        </div>
        
        <div class="stack">
          <h3>Click Context Menu</h3>
          <ContextMenu trigger="click">
            <div slot="trigger">
              <Button variant="outline" color="green">Click for Menu</Button>
            </div>
            
            <div slot="menu">
              <div class="context-menu-content">
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  View Details
                </a>
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                  Settings
                </a>
                <a href="#" class="context-menu-item">
                  <svg class="context-menu-item-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                  </svg>
                  Add to Favorites
                </a>
              </div>
            </div>
          </ContextMenu>
        </div>
      </section>

      <!-- HoverCard Test -->
      <section class="stack">
        <h2>HoverCard Component</h2>
        
        <div class="stack">
          <h3>Simple Hover Cards</h3>
          <div class="cluster">
            <HoverCard 
              content="This is a simple hover card with basic text content."
              position="top"
              showDelay={300}
            >
              <Button variant="outline" color="blue" size="sm">Hover Top</Button>
            </HoverCard>
            
            <HoverCard 
              content="This card appears on the right side with a slight delay."
              position="right"
              showDelay={500}
            >
              <Button variant="outline" color="green" size="sm">Hover Right</Button>
            </HoverCard>
            
            <HoverCard 
              content="Bottom positioned hover card with quick response."
              position="bottom"
              showDelay={200}
            >
              <Button variant="outline" color="purple" size="sm">Hover Bottom</Button>
            </HoverCard>
            
            <HoverCard 
              content="Left side hover card with extended content for testing."
              position="left"
              showDelay={400}
            >
              <Button variant="outline" color="yellow" size="sm">Hover Left</Button>
            </HoverCard>
          </div>
        </div>
        
        <div class="stack">
          <h3>Rich Content Hover Cards</h3>
          <div class="cluster">
            <HoverCard position="top" showDelay={300} maxWidth="350px">
              <Button variant="solid" color="blue">User Profile</Button>
              
              <div slot="card">
                <div class="hover-card-body" style="padding: var(--space-4);">
                  <div style="display: flex; align-items: center; gap: var(--space-3); margin-bottom: var(--space-3);">
                    <img 
                      src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=80&h=80&fit=crop&crop=face" 
                      alt="User avatar" 
                      style="width: 48px; height: 48px; border-radius: 50%; object-fit: cover;"
                    />
                    <div>
                      <h4 style="margin: 0; font-weight: var(--font-weight-semibold);">John Doe</h4>
                      <p style="margin: 0; color: var(--color-text-secondary); font-size: var(--text-sm);">Senior Developer</p>
                    </div>
                  </div>
                  <p style="color: var(--color-text-secondary); margin-bottom: var(--space-3); font-size: var(--text-sm);">
                    Experienced full-stack developer with expertise in React, Node.js, and cloud architecture.
                  </p>
                  <div class="cluster">
                    <Badge variant="soft" color="blue" size="sm">React</Badge>
                    <Badge variant="soft" color="green" size="sm">Node.js</Badge>
                    <Badge variant="soft" color="purple" size="sm">TypeScript</Badge>
                  </div>
                </div>
              </div>
            </HoverCard>
            
            <HoverCard position="bottom" showDelay={400} maxWidth="300px">
              <Button variant="solid" color="green">Product Info</Button>
              
              <div slot="card">
                <div class="hover-card-body" style="padding: var(--space-4);">
                  <h4 style="margin: 0 0 var(--space-2) 0; font-weight: var(--font-weight-semibold);">AHA Design System</h4>
                  <p style="color: var(--color-text-secondary); margin-bottom: var(--space-3); font-size: var(--text-sm);">
                    A comprehensive design system built with Astro, HTMX, and Alpine.js for modern web applications.
                  </p>
                  <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                      <div style="display: flex; align-items: center; gap: var(--space-1);">
                        <Rating maxStars={5} initialValue={5} readonly={true} size="sm" />
                        <span style="font-size: var(--text-sm); color: var(--color-text-secondary);">(127)</span>
                      </div>
                    </div>
                    <Badge variant="solid" color="green" size="sm">Free</Badge>
                  </div>
                </div>
              </div>
            </HoverCard>
          </div>
        </div>
        
        <div class="stack">
          <h3>Click-to-Open Hover Card</h3>
          <HoverCard 
            position="right" 
            openOnHover={false} 
            openOnClick={true}
            maxWidth="280px"
          >
            <Button variant="outline" color="red">Click for Info</Button>
            
            <div slot="card">
              <div class="hover-card-body" style="padding: var(--space-4);">
                <h4 style="margin: 0 0 var(--space-2) 0;">Click Trigger</h4>
                <p style="color: var(--color-text-secondary); font-size: var(--text-sm);">
                  This hover card is triggered by clicking instead of hovering. Click again to close.
                </p>
              </div>
            </div>
          </HoverCard>
        </div>
      </section>

      <!-- DatePicker Test -->
      <section class="stack">
        <h2>DatePicker Component</h2>
        
        <div class="stack">
          <h3>Basic Date Picker</h3>
          <div class="cluster">
            <DatePicker 
              name="birth_date"
              placeholder="Select your birthdate"
              format="Y-m-d"
            />
            
            <DatePicker 
              name="event_date"
              placeholder="Event date"
              format="M j, Y"
              value="2024-12-25"
            />
            
            <DatePicker 
              name="appointment"
              placeholder="Appointment date"
              format="m/d/Y"
            />
          </div>
        </div>
        
        <div class="stack">
          <h3>Different Date Formats</h3>
          <div class="stack">
            <div>
              <h4>ISO Format (Y-m-d)</h4>
              <DatePicker 
                name="iso_date"
                placeholder="YYYY-MM-DD format"
                format="Y-m-d"
                value="2024-07-18"
              />
            </div>
            
            <div>
              <h4>US Format (m/d/Y)</h4>
              <DatePicker 
                name="us_date"
                placeholder="MM/DD/YYYY format"
                format="m/d/Y"
              />
            </div>
            
            <div>
              <h4>Long Format (j F Y)</h4>
              <DatePicker 
                name="long_date"
                placeholder="Day Month Year format"
                format="j F Y"
              />
            </div>
          </div>
        </div>
        
        <div class="stack">
          <h3>States</h3>
          <div class="cluster">
            <DatePicker 
              name="disabled_date"
              placeholder="Disabled date picker"
              disabled={true}
            />
            
            <DatePicker 
              name="readonly_date"
              placeholder="Readonly date picker"
              readonly={true}
              value="2024-01-01"
            />
          </div>
        </div>
      </section>

      <!-- ImageGallery Test -->
      <section class="stack">
        <h2>ImageGallery Component</h2>
        
        <div class="stack">
          <h3>Basic Image Gallery (3 columns)</h3>
          <ImageGallery 
            images={[
              { 
                src: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=300&h=200&fit=crop",
                alt: "Mountain landscape",
                caption: "Beautiful mountain landscape at sunset"
              },
              { 
                src: "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=800&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=300&h=200&fit=crop",
                alt: "Forest trees",
                caption: "Dense forest with tall trees"
              },
              { 
                src: "https://images.unsplash.com/photo-1426604966848-d7adac402bff?w=800&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1426604966848-d7adac402bff?w=300&h=200&fit=crop",
                alt: "Alpine lake",
                caption: "Crystal clear alpine lake"
              },
              { 
                src: "https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?w=800&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?w=300&h=200&fit=crop",
                alt: "Starry night",
                caption: "Milky Way over mountains"
              },
              { 
                src: "https://images.unsplash.com/photo-1439066615861-d1af74d74000?w=800&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1439066615861-d1af74d74000?w=300&h=200&fit=crop",
                alt: "Tropical beach",
                caption: "Pristine tropical beach"
              },
              { 
                src: "https://images.unsplash.com/photo-1472214103451-9374bd1c798e?w=800&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1472214103451-9374bd1c798e?w=300&h=200&fit=crop",
                alt: "Desert dunes",
                caption: "Sand dunes in the desert"
              }
            ]}
            columns={3}
            gap="md"
            aspectRatio="photo"
          />
        </div>
        
        <div class="stack">
          <h3>Square Gallery (4 columns)</h3>
          <ImageGallery 
            images={[
              { 
                src: "https://images.unsplash.com/photo-1518837695005-2083093ee35b?w=600&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1518837695005-2083093ee35b?w=200&h=200&fit=crop",
                alt: "Urban architecture"
              },
              { 
                src: "https://images.unsplash.com/photo-1511593358241-7eea1f3c84e5?w=600&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1511593358241-7eea1f3c84e5?w=200&h=200&fit=crop",
                alt: "Wildflowers"
              },
              { 
                src: "https://images.unsplash.com/photo-1475924156734-496f6cac6ec1?w=600&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1475924156734-496f6cac6ec1?w=200&h=200&fit=crop",
                alt: "Ocean waves"
              },
              { 
                src: "https://images.unsplash.com/photo-1476231682828-37e571bc172f?w=600&h=600&fit=crop",
                thumbnail: "https://images.unsplash.com/photo-1476231682828-37e571bc172f?w=200&h=200&fit=crop",
                alt: "Autumn forest"
              }
            ]}
            columns={4}
            gap="sm"
            aspectRatio="square"
          />
        </div>
        
        <div class="stack">
          <h3>Compact Gallery (6 columns)</h3>
          <ImageGallery 
            images={[
              { src: "https://images.unsplash.com/photo-1501594907352-04cda38ebc29?w=400&h=400&fit=crop", alt: "Sunrise lake" },
              { src: "https://images.unsplash.com/photo-1485893086445-ed75865251e0?w=400&h=400&fit=crop", alt: "City lights" },
              { src: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=400&fit=crop", alt: "Mountain peak" },
              { src: "https://images.unsplash.com/photo-1448375240586-882707db888b?w=400&h=400&fit=crop", alt: "Coastal view" },
              { src: "https://images.unsplash.com/photo-1469474968028-56623f02e42e?w=400&h=400&fit=crop", alt: "Rural landscape" },
              { src: "https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?w=400&h=400&fit=crop", alt: "Misty forest" }
            ]}
            columns={6}
            gap="sm"
            aspectRatio="square"
          />
        </div>
      </section>

      <!-- FullScreenModal Test -->
      <section class="stack">
        <h2>FullScreenModal Component</h2>
        
        <div class="stack">
          <h3>Basic Full Screen Modal</h3>
          <FullScreenModal id="basic-fullscreen" closeable={true} lockScroll={true}>
            <div slot="trigger">
              <Button variant="solid" color="blue">Open Full Screen Modal</Button>
            </div>
            
            <div slot="header">
              <h1 style="margin: 0; font-size: var(--text-2xl); font-weight: var(--font-weight-bold);">Full Screen Experience</h1>
            </div>
            
            <div slot="body">
              <div class="stack">
                <p>This modal takes up the entire screen, providing an immersive experience perfect for detailed content, forms, or media viewing.</p>
                
                <div class="card card-default card-padding-md">
                  <h3>Feature Highlights</h3>
                  <ul>
                    <li>Full viewport coverage</li>
                    <li>Body scroll locking</li>
                    <li>Escape key support</li>
                    <li>Focus trapping</li>
                    <li>Smooth transitions</li>
                  </ul>
                </div>
                
                <div class="cluster">
                  <Badge variant="solid" color="blue">Responsive</Badge>
                  <Badge variant="solid" color="green">Accessible</Badge>
                  <Badge variant="solid" color="purple">Interactive</Badge>
                </div>
                
                <Progress value={75} max={100} color="blue" showLabel={true} />
                
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris.</p>
                
                <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
                
                <Quotes 
                  quote="Full screen modals are perfect for immersive experiences that require the user's complete attention."
                  author="UI/UX Expert"
                  variant="minimal"
                  size="md"
                />
              </div>
            </div>
            
            <div slot="footer">
              <div class="cluster">
                <Button variant="outline" color="neutral">Cancel</Button>
                <Button variant="solid" color="blue">Save Changes</Button>
                <Button variant="solid" color="green">Publish</Button>
              </div>
            </div>
          </FullScreenModal>
        </div>
        
        <div class="stack">
          <h3>Media Full Screen Modal</h3>
          <FullScreenModal id="media-fullscreen" closeable={true}>
            <div slot="trigger">
              <Button variant="outline" color="purple">View in Full Screen</Button>
            </div>
            
            <div slot="header">
              <h2 style="margin: 0;">Media Gallery</h2>
            </div>
            
            <div slot="body">
              <div class="stack">
                <p>Perfect for showcasing media content, presentations, or detailed documentation.</p>
                
                <ImageGallery 
                  images={[
                    { 
                      src: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=800&h=500&fit=crop",
                      thumbnail: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=200&h=150&fit=crop",
                      alt: "Mountain view"
                    },
                    { 
                      src: "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=800&h=500&fit=crop",
                      thumbnail: "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=200&h=150&fit=crop",
                      alt: "Forest"
                    },
                    { 
                      src: "https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?w=800&h=500&fit=crop",
                      thumbnail: "https://images.unsplash.com/photo-1470071459604-3b5ec3a7fe05?w=200&h=150&fit=crop",
                      alt: "Night sky"
                    }
                  ]}
                  columns={3}
                  aspectRatio="photo"
                />
              </div>
            </div>
            
            <div slot="footer">
              <Button variant="outline" color="blue">Download All</Button>
            </div>
          </FullScreenModal>
        </div>
      </section>

      <!-- MonacoEditor Test -->
      <section class="stack">
        <h2>MonacoEditor Component</h2>
        
        <div class="stack">
          <h3>JavaScript Editor</h3>
          <MonacoEditor 
            id="js-editor"
            value={`// Welcome to the Monaco Editor!
console.log('Hello, World!');

function fibonacci(n) {
  if (n <= 1) return n;
  return fibonacci(n - 1) + fibonacci(n - 2);
}

// Calculate the 10th Fibonacci number
const result = fibonacci(10);
console.log(\`Fibonacci(10) = \${result}\`);

// Array methods example
const numbers = [1, 2, 3, 4, 5];
const doubled = numbers.map(n => n * 2);
console.log('Original:', numbers);
console.log('Doubled:', doubled);`}
            language="javascript"
            theme="vs-dark"
            fontSize={14}
            height="300px"
          />
        </div>
        
        <div class="stack">
          <h3>Different Languages</h3>
          <div class="cluster">
            <MonacoEditor 
              value={`# Python Example
def greet(name):
    return f"Hello, {name}!"

# List comprehension
squares = [x**2 for x in range(10)]
print(squares)

# Dictionary example
person = {
    "name": "Alice",
    "age": 30,
    "city": "New York"
}

print(greet(person["name"]))`}
              language="python"
              theme="vs-light"
              height="250px"
              fontSize={13}
            />
            
            <MonacoEditor 
              value={`/* CSS Styling */
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-4);
  padding: var(--space-6);
}

.card {
  background: var(--color-surface);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-md);
  padding: var(--space-4);
  border: 1px solid var(--color-border);
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
  transition: all var(--transition-fast);
}`}
              language="css"
              theme="vs-dark"
              height="250px"
              fontSize={13}
            />
          </div>
        </div>
        
        <div class="stack">
          <h3>Read-Only Editor</h3>
          <MonacoEditor 
            value={`{
  "name": "aha-design-system",
  "version": "1.0.0",
  "description": "A comprehensive design system built with Astro, HTMX, and Alpine.js",
  "main": "index.js",
  "scripts": {
    "dev": "astro dev",
    "build": "astro build",
    "preview": "astro preview"
  },
  "keywords": ["astro", "htmx", "alpine", "design-system", "ui"],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "astro": "^4.0.0",
    "alpinejs": "^3.0.0"
  }
}`}
            language="json"
            theme="vs-light"
            readOnly={true}
            height="200px"
            minimap={false}
          />
        </div>
      </section>

      <!-- VideoPlayer Test -->
      <section class="stack">
        <h2>VideoPlayer Component</h2>
        
        <div class="stack">
          <h3>HTML5 Video Player</h3>
          <div class="cluster">
            <VideoPlayer 
              src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"
              poster="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg"
              width="640"
              height="360"
              showControls={true}
              showFullscreen={true}
              showVolumeControl={true}
              showProgress={true}
              showTime={true}
              showPlaybackSpeed={true}
            />
          </div>
        </div>
        
        <div class="stack">
          <h3>Different Sizes</h3>
          <div class="cluster">
            <VideoPlayer 
              src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/Sintel.mp4"
              width="480"
              height="270"
              showPlaybackSpeed={false}
              showTime={true}
            />
            
            <VideoPlayer 
              src="https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"
              width="320"
              height="180"
              showPlaybackSpeed={false}
              showTime={false}
              showVolumeControl={false}
            />
          </div>
        </div>
      </section>

      <!-- YouTube Integration Test -->
      <section class="stack">
        <h2>YouTube Video Integration</h2>
        
        <div class="stack">
          <h3>Embedded YouTube Video</h3>
          <p style="color: var(--color-text-secondary); margin-bottom: var(--space-4);">
            While we have a custom VideoPlayer component for HTML5 videos, YouTube videos can be easily embedded using iframes.
          </p>
          
          <div style="max-width: 800px;">
            <div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%; border-radius: var(--radius-lg); overflow: hidden; box-shadow: var(--shadow-lg);">
              <iframe 
                src="https://www.youtube.com/embed/Kn-WX4J8K6g?si=ERbVWWebnpZc37Eb" 
                title="YouTube video player" 
                style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                allowfullscreen
              >
              </iframe>
            </div>
          </div>
        </div>
        
        <div class="stack">
          <h3>Responsive YouTube Embed</h3>
          <p style="color: var(--color-text-secondary); margin-bottom: var(--space-4);">
            YouTube videos automatically scale to fit their container while maintaining aspect ratio.
          </p>
          
          <div class="cluster">
            <div style="width: 400px;">
              <div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%; border-radius: var(--radius-md); overflow: hidden;">
                <iframe 
                  src="https://www.youtube.com/embed/Kn-WX4J8K6g?si=ERbVWWebnpZc37Eb" 
                  title="YouTube video player" 
                  style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                  allowfullscreen
                >
                </iframe>
              </div>
            </div>
            
            <div style="width: 300px;">
              <div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%; border-radius: var(--radius-md); overflow: hidden;">
                <iframe 
                  src="https://www.youtube.com/embed/Kn-WX4J8K6g?si=ERbVWWebnpZc37Eb&start=30" 
                  title="YouTube video player" 
                  style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                  allowfullscreen
                >
                </iframe>
              </div>
            </div>
          </div>
        </div>
        
        <div class="stack">
          <h3>YouTube with Custom Styling</h3>
          <div style="max-width: 600px; padding: var(--space-4); background: var(--color-surface); border-radius: var(--radius-xl); border: 1px solid var(--color-border);">
            <h4 style="margin: 0 0 var(--space-3) 0;">Featured Video</h4>
            <div style="position: relative; width: 100%; height: 0; padding-bottom: 56.25%; border-radius: var(--radius-lg); overflow: hidden;">
              <iframe 
                src="https://www.youtube.com/embed/Kn-WX4J8K6g?si=ERbVWWebnpZc37Eb" 
                title="YouTube video player" 
                style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                allowfullscreen
              >
              </iframe>
            </div>
            <p style="margin: var(--space-3) 0 0 0; color: var(--color-text-secondary); font-size: var(--text-sm);">
              Watch this amazing video demonstration showcasing our design system capabilities.
            </p>
          </div>
        </div>
      </section>
    </div>
  </main>

  <script>
    function toggleTheme() {
      const html = document.documentElement;
      const currentTheme = html.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      html.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
    }

    // Toast notification functions
    let toastContainer;
    let toastId = 0;

    function ensureToastContainer() {
      if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.id = 'toast-container';
        toastContainer.style.cssText = `
          position: fixed;
          top: 1rem;
          right: 1rem;
          z-index: 9999;
          pointer-events: none;
          max-width: 24rem;
        `;
        document.body.appendChild(toastContainer);
      }
      return toastContainer;
    }

    function createToastElement(variant, title, message, position = 'top-right') {
      const toast = document.createElement('div');
      const id = `toast-${++toastId}`;
      
      const positionStyles = {
        'top-right': 'top: 1rem; right: 1rem;',
        'top-left': 'top: 1rem; left: 1rem;',
        'bottom-right': 'bottom: 1rem; right: 1rem;',
        'bottom-left': 'bottom: 1rem; left: 1rem;',
        'top-center': 'top: 1rem; left: 50%; transform: translateX(-50%);',
        'bottom-center': 'bottom: 1rem; left: 50%; transform: translateX(-50%);'
      };

      toast.innerHTML = `
        <div class="toast toast-${variant}" style="position: fixed; ${positionStyles[position]} z-index: 9999; pointer-events: auto; max-width: 24rem; margin-bottom: 0.5rem;">
          <svg class="toast-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            ${getToastIcon(variant)}
          </svg>
          <div class="toast-content">
            <p class="toast-title">${title}</p>
            <div class="toast-message has-title">${message}</div>
          </div>
          <button class="toast-close" onclick="removeToast('${id}')" type="button">
            <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          <div class="toast-progress" style="width: 100%; transition: width 5000ms linear; animation: toast-progress 5s linear forwards;"></div>
        </div>
      `;
      
      toast.id = id;
      document.body.appendChild(toast);
      
      // Auto remove after 5 seconds
      setTimeout(() => removeToast(id), 5000);
      
      return toast;
    }

    function getToastIcon(variant) {
      const icons = {
        'success': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>',
        'error': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>',
        'warning': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4.5c-.77-.833-2.694-.833-3.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"></path>',
        'info': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>',
        'default': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
      };
      return icons[variant] || icons.default;
    }

    function removeToast(id) {
      const toast = document.getElementById(id);
      if (toast) {
        toast.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
        toast.style.opacity = '0';
        toast.style.transform = 'translateY(-1rem) scale(0.95)';
        setTimeout(() => toast.remove(), 300);
      }
    }

    window.showToast = (variant, title, message) => {
      createToastElement(variant, title, message);
    };

    window.showPositionalToast = (position, title) => {
      createToastElement('info', title, `This toast appears in the ${position} position.`, position);
    };

    window.removeToast = removeToast;

    // Banner test functions
    window.showTopBanner = () => {
      const banner = document.querySelector('#test-top-banner');
      if (banner) {
        banner.style.display = 'block';
        // Reset Alpine.js state
        const alpineComponent = banner.__x.$data;
        if (alpineComponent) {
          alpineComponent.bannerVisible = true;
        }
      }
    };

    window.showBottomBanner = () => {
      const banner = document.querySelector('#test-bottom-banner');
      if (banner) {
        banner.style.display = 'block';
        // Reset Alpine.js state
        const alpineComponent = banner.__x.$data;
        if (alpineComponent) {
          alpineComponent.bannerVisible = true;
        }
      }
    };

    window.hideBanners = () => {
      const banners = document.querySelectorAll('.test-banner-top, .test-banner-bottom');
      banners.forEach(banner => {
        const alpineComponent = banner.__x?.$data;
        if (alpineComponent) {
          alpineComponent.bannerVisible = false;
        }
        setTimeout(() => {
          banner.style.display = 'none';
        }, 300);
      });
    };

    // Demo functions for MenuBar actions
    window.newFile = () => alert('New file created!');
    window.openFile = () => alert('File dialog opened!');
    window.saveFile = () => alert('File saved!');
    window.saveAsFile = () => alert('Save As dialog opened!');
    window.printFile = () => alert('Print dialog opened!');
    window.undo = () => alert('Undo performed!');
    window.redo = () => alert('Redo performed!');
    window.cut = () => alert('Cut operation!');
    window.copy = () => alert('Copy operation!');
    window.paste = () => alert('Paste operation!');
    window.zoomIn = () => alert('Zoomed in!');
    window.zoomOut = () => alert('Zoomed out!');
    window.resetZoom = () => alert('Zoom reset!');
    window.toggleSidebar = () => alert('Sidebar toggled!');
    window.openDocs = () => alert('Documentation opened!');
    window.showShortcuts = () => alert('Keyboard shortcuts displayed!');
    window.showAbout = () => alert('About dialog shown!');

    // Load saved theme or default to light
    document.addEventListener('DOMContentLoaded', () => {
      const savedTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', savedTheme);
      
      // Test navigation components functionality
      console.log('Testing navigation components...');
      
      // Test if tabs are working
      setTimeout(() => {
        const tabButtons = document.querySelectorAll('.tab-item');
        if (tabButtons.length > 0) {
          console.log('✓ Tabs found:', tabButtons.length);
          
          // Test click functionality
          tabButtons.forEach((btn, idx) => {
            if (!btn.disabled && idx === 1) { // Click the second tab
              btn.click();
              console.log('✓ Tab clicked successfully');
            }
          });
        } else {
          console.warn('⚠ No tabs found');
        }
        
        // Test pagination buttons
        const paginationButtons = document.querySelectorAll('.pagination-button');
        if (paginationButtons.length > 0) {
          console.log('✓ Pagination buttons found:', paginationButtons.length);
        } else {
          console.warn('⚠ No pagination buttons found');
        }
        
        // Test breadcrumbs
        const breadcrumbs = document.querySelectorAll('.breadcrumb-link');
        if (breadcrumbs.length > 0) {
          console.log('✓ Breadcrumb links found:', breadcrumbs.length);
        } else {
          console.warn('⚠ No breadcrumb links found');
        }
        
        // Test navigation menu
        const navMenus = document.querySelectorAll('.navigation-menu');
        if (navMenus.length > 0) {
          console.log('✓ Navigation menus found:', navMenus.length);
        } else {
          console.warn('⚠ No navigation menus found');
        }
        
        // Test menu bar
        const menuBars = document.querySelectorAll('.menu-bar');
        if (menuBars.length > 0) {
          console.log('✓ Menu bars found:', menuBars.length);
        } else {
          console.warn('⚠ No menu bars found');
        }
      }, 1000);
    });
  </script>
</Layout>