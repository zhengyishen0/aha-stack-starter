---
/**
 * HeroCentered Component
 * 
 * A centered hero section with large text, description, call-to-action buttons,
 * and an optional image below. Perfect for landing pages and product launches.
 * 
 * Features:
 * - Fully centered text alignment
 * - Customizable primary color theme
 * - Flexible button configuration
 * - Optional image section
 * - Responsive typography
 * - Alpine.js compatible
 * 
 * Usage:
 * ```astro
 * <HeroCentered
 *   title="Level Up Your"
 *   titleHighlight="Landing Pages"
 *   description="Award winning pages that will take your game to the next level!"
 *   primaryButtonText="Try It Free"
 *   primaryButtonHref="#trial"
 *   secondaryButtonText="Learn More"
 *   secondaryButtonHref="#features"
 *   primaryColor="purple"
 *   imageUrl="https://example.com/hero-image.png"
 *   imageAlt="Product screenshot"
 * />
 * ```
 */

export interface Props {
  title: string;
  titleHighlight: string;
  description: string;
  primaryButtonText: string;
  primaryButtonHref: string;
  secondaryButtonText?: string;
  secondaryButtonHref?: string;
  primaryColor?: 'indigo' | 'purple' | 'blue' | 'green' | 'red' | 'yellow';
  imageUrl?: string;
  imageAlt?: string;
  backgroundColor?: string;
  containerMaxWidth?: string;
  showImage?: boolean;
}

const {
  title,
  titleHighlight,
  description,
  primaryButtonText,
  primaryButtonHref,
  secondaryButtonText = "Learn More",
  secondaryButtonHref = "#",
  primaryColor = "purple",
  imageUrl,
  imageAlt = "Hero image",
  backgroundColor = "bg-white",
  containerMaxWidth = "max-w-6xl",
  showImage = true
} = Astro.props;

// Color mapping for primary colors
const colorClasses = {
  indigo: {
    bg: 'bg-indigo-600',
    bgHover: 'hover:bg-indigo-700',
    text: 'text-indigo-500'
  },
  purple: {
    bg: 'bg-purple-500',
    bgHover: 'hover:bg-purple-700',
    text: 'text-purple-500'
  },
  blue: {
    bg: 'bg-blue-600',
    bgHover: 'hover:bg-blue-700',
    text: 'text-blue-500'
  },
  green: {
    bg: 'bg-green-600',
    bgHover: 'hover:bg-green-700',
    text: 'text-green-500'
  },
  red: {
    bg: 'bg-red-600',
    bgHover: 'hover:bg-red-700',
    text: 'text-red-500'
  },
  yellow: {
    bg: 'bg-yellow-500',
    bgHover: 'hover:bg-yellow-600',
    text: 'text-yellow-500'
  }
};

const colors = colorClasses[primaryColor];
---

<section class={`px-2 pt-32 ${backgroundColor} md:px-0`}>
  <div class={`container items-center ${containerMaxWidth} px-5 mx-auto space-y-6 text-center`}>
    <h1 class="text-4xl font-extrabold tracking-tight text-left text-gray-900 sm:text-5xl md:text-6xl md:text-center">
      <span class="block">{title} <span class={`block mt-1 ${colors.text} lg:inline lg:mt-0`}>{titleHighlight}</span></span>
    </h1>
    <p class="w-full mx-auto text-base text-left text-gray-500 md:max-w-md sm:text-lg lg:text-2xl md:max-w-3xl md:text-center">
      {description}
    </p>
    <div class="relative flex flex-col justify-center md:flex-row md:space-x-4">
      <a 
        href={primaryButtonHref} 
        class={`flex items-center w-full px-6 py-3 mb-3 text-lg text-white ${colors.bg} rounded-md md:mb-0 ${colors.bgHover} md:w-auto transition-colors duration-200`}
      >
        {primaryButtonText}
        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="5" y1="12" x2="19" y2="12"></line>
          <polyline points="12 5 19 12 12 19"></polyline>
        </svg>
      </a>
      {secondaryButtonText && (
        <a 
          href={secondaryButtonHref} 
          class="flex items-center px-6 py-3 text-gray-500 bg-gray-100 rounded-md hover:bg-gray-200 hover:text-gray-600 transition-colors duration-200"
        >
          {secondaryButtonText}
        </a>
      )}
    </div>
  </div>
  
  {showImage && imageUrl && (
    <div class="container items-center max-w-4xl px-5 mx-auto mt-16 text-center">
      <slot name="image">
        <img src={imageUrl} alt={imageAlt} class="w-full h-auto object-cover" />
      </slot>
    </div>
  )}
</section>