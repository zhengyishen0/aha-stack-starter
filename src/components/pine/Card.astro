---
export interface Props {
  variant?: 'default' | 'bordered' | 'shadow' | 'elevated';
  padding?: 'none' | 'sm' | 'md' | 'lg';
  class?: string;
  headerClass?: string;
  bodyClass?: string;
  footerClass?: string;
}

const { 
  variant = 'default',
  padding = 'md',
  class: className = "",
  headerClass = "",
  bodyClass = "",
  footerClass = ""
} = Astro.props;

// Generate class names using our design system
const getCardClasses = () => {
  const baseClass = 'card';
  const variantClass = `card-${variant}`;
  const paddingClass = `card-padding-${padding}`;
  
  return `${baseClass} ${variantClass} ${paddingClass}`;
};
---

<!-- 
Pine UI Card Component

Usage:
<Card variant="shadow" padding="md">
  <div slot="header">
    <h2>Card Title</h2>
  </div>
  
  <div slot="body">
    <p>Card content goes here...</p>
  </div>
  
  <div slot="footer">
    <Button>Action</Button>
  </div>
</Card>

Features:
- Multiple variants (default, bordered, shadow, elevated)
- Configurable padding
- Header, body, footer slots
- Responsive design
- Customizable styling
-->

<div class={`${getCardClasses()} ${className}`}>
  <!-- Header -->
  {Astro.slots.header && (
    <div class={`card-header ${headerClass}`}>
      <slot name="header" />
    </div>
  )}
  
  <!-- Body -->
  <div class={`card-body ${bodyClass}`}>
    <slot name="body" />
    <slot />
  </div>
  
  <!-- Footer -->
  {Astro.slots.footer && (
    <div class={`card-footer ${footerClass}`}>
      <slot name="footer" />
    </div>
  )}
</div>