---
export interface Props {
  orientation?: 'horizontal' | 'vertical';
  trigger?: 'hover' | 'click';
  delay?: number;
  class?: string;
  menuClass?: string;
  responsive?: boolean;
}

const { 
  orientation = 'horizontal',
  trigger = 'hover',
  delay = 150,
  class: className = "",
  menuClass = "",
  responsive = true
} = Astro.props;

// Generate class names using our design system
const getNavigationMenuClasses = () => {
  const baseClass = 'navigation-menu';
  
  return `${baseClass}`;
};

const getMenuListClasses = () => {
  const baseClass = 'navigation-menu-list';
  const orientationClass = `navigation-menu-list-${orientation}`;
  const responsiveClass = responsive ? 'navigation-menu-desktop' : '';
  
  return `${baseClass} ${orientationClass} ${responsiveClass}`.trim();
};
---

<!-- 
Pine UI Navigation Menu Component

Usage:
<NavigationMenu orientation="horizontal" trigger="hover">
  <div slot="brand">
    <a href="/" class="navigation-menu-link">
      <img src="/logo.svg" alt="Logo" class="w-8 h-8">
      <span class="font-bold text-xl">Brand</span>
    </a>
  </div>
  
  <nav slot="menu">
    <ul class="navigation-menu-list navigation-menu-list-horizontal">
      <li class="navigation-menu-item">
        <a href="/" class="navigation-menu-link">Home</a>
      </li>
      <li class="navigation-menu-item" x-data="{ open: false }" @mouseenter="open = true" @mouseleave="open = false">
        <button class="navigation-menu-trigger">
          Products
          <svg class="ml-1 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
        <div x-show="open" x-transition class="navigation-menu-content">
          <a href="/products/web" class="navigation-menu-content-item">Web Apps</a>
          <a href="/products/mobile" class="navigation-menu-content-item">Mobile Apps</a>
          <a href="/products/desktop" class="navigation-menu-content-item">Desktop Apps</a>
        </div>
      </li>
      <li class="navigation-menu-item">
        <a href="/about" class="navigation-menu-link">About</a>
      </li>
      <li class="navigation-menu-item">
        <a href="/contact" class="navigation-menu-link">Contact</a>
      </li>
    </ul>
  </nav>
  
  <div slot="actions">
    <button class="button button-md button-solid-blue">
      Get Started
    </button>
  </div>
</NavigationMenu>

Advanced Multi-level Menu:
<NavigationMenu>
  <nav slot="menu">
    <div x-data="navigationMenu()" class="relative">
      <ul class="navigation-menu-list navigation-menu-list-horizontal">
        <li class="navigation-menu-item">
          <button 
            @mouseenter="openMenu('products')" 
            @mouseleave="closeMenu('products')"
            class="navigation-menu-trigger"
          >
            Products
          </button>
          <div 
            x-show="activeMenu === 'products'"
            @mouseenter="openMenu('products')"
            @mouseleave="closeMenu('products')"
            x-transition
            class="navigation-menu-content navigation-menu-content-mega"
          >
            <div class="grid grid-cols-2 gap-4">
              <div>
                <h3 class="navigation-menu-content-header">Development</h3>
                <a href="/web-dev" class="navigation-menu-content-item">Web Development</a>
                <a href="/mobile-dev" class="navigation-menu-content-item">Mobile Development</a>
                <a href="/api-dev" class="navigation-menu-content-item">API Development</a>
              </div>
              <div>
                <h3 class="navigation-menu-content-header">Design</h3>
                <a href="/ui-design" class="navigation-menu-content-item">UI Design</a>
                <a href="/ux-design" class="navigation-menu-content-item">UX Design</a>
                <a href="/branding" class="navigation-menu-content-item">Branding</a>
              </div>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </nav>
</NavigationMenu>

Responsive Mobile Menu:
<NavigationMenu responsive={true}>
  <div slot="brand">
    <a href="/" class="navigation-menu-link">
      <span class="font-bold text-xl">Brand</span>
    </a>
  </div>
  
  <div slot="mobile-toggle" class="navigation-menu-mobile-only">
    <button 
      @click="mobileMenuOpen = !mobileMenuOpen"
      class="navigation-menu-mobile-toggle"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path x-show="!mobileMenuOpen" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        <path x-show="mobileMenuOpen" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
  
  <nav slot="menu" class="navigation-menu-desktop">
    <!-- Desktop menu items -->
  </nav>
  
  <nav slot="mobile-menu" class="navigation-menu-mobile-only">
    <div x-show="mobileMenuOpen" x-transition class="navigation-menu-mobile">
      <!-- Mobile menu items -->
    </div>
  </nav>
</NavigationMenu>

<script>
function navigationMenu() {
  return {
    activeMenu: null,
    timeoutId: null,
    
    openMenu(menu) {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
        this.timeoutId = null;
      }
      this.activeMenu = menu;
    },
    
    closeMenu(menu) {
      this.timeoutId = setTimeout(() => {
        if (this.activeMenu === menu) {
          this.activeMenu = null;
        }
      }, 150);
    },
    
    closeAllMenus() {
      this.activeMenu = null;
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
        this.timeoutId = null;
      }
    }
  }
}
</script>

Features:
- Hover and click trigger options
- Multi-level dropdown support
- Configurable delay for hover interactions
- Responsive mobile menu toggle
- Mega menu support with grid layouts
- Active state management
- Smooth transitions and animations
- Alpine.js powered interactivity
- Accessible keyboard navigation
- Customizable styling and positioning
-->

<nav 
  x-data={`{ 
    mobileMenuOpen: false,
    activeMenu: null,
    timeoutId: null,
    
    openMenu(menu) {
      if ('${trigger}' === 'hover') {
        if (this.timeoutId) {
          clearTimeout(this.timeoutId);
          this.timeoutId = null;
        }
        this.activeMenu = menu;
      }
    },
    
    closeMenu(menu) {
      if ('${trigger}' === 'hover') {
        this.timeoutId = setTimeout(() => {
          if (this.activeMenu === menu) {
            this.activeMenu = null;
          }
        }, 150);
      }
    },
    
    toggleMenu(menu) {
      if ('${trigger}' === 'click') {
        this.activeMenu = this.activeMenu === menu ? null : menu;
      }
    },
    
    closeAllMenus() {
      this.activeMenu = null;
      this.mobileMenuOpen = false;
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
        this.timeoutId = null;
      }
    }
  }`}
  @click.away="closeAllMenus()"
  @keydown.escape="closeAllMenus()"
  class={`${getNavigationMenuClasses()} ${className}`}
>
  <div class={`navigation-menu-list ${responsive ? 'flex-wrap' : ''} ${orientation === 'vertical' ? 'navigation-menu-list-vertical' : 'navigation-menu-list-horizontal'}`}>
    
    <!-- Brand/Logo -->
    <div class="navigation-menu-brand">
      <slot name="brand" />
    </div>
    
    <!-- Mobile Menu Toggle -->
    {responsive && (
      <div class="navigation-menu-mobile-only">
        <slot name="mobile-toggle">
          <button 
            @click="mobileMenuOpen = !mobileMenuOpen"
            class="navigation-menu-mobile-toggle"
            aria-expanded="false"
          >
            <span class="sr-only">Open main menu</span>
            <!-- Hamburger icon -->
            <svg 
              x-show="!mobileMenuOpen" 
              class="block h-6 w-6" 
              fill="none" 
              viewBox="0 0 24 24" 
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
            <!-- Close icon -->
            <svg 
              x-show="mobileMenuOpen" 
              class="block h-6 w-6" 
              fill="none" 
              viewBox="0 0 24 24" 
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </slot>
      </div>
    )}
    
    <!-- Desktop Navigation -->
    <div class={`${getMenuListClasses()} ${menuClass}`}>
      <slot name="menu" />
    </div>
    
    <!-- Actions (CTA buttons, etc.) -->
    <div class={`navigation-menu-actions ${responsive ? 'navigation-menu-desktop' : ''}`}>
      <slot name="actions" />
    </div>
  </div>
  
  <!-- Mobile Navigation Menu -->
  {responsive && (
    <div class="navigation-menu-mobile-only">
      <div 
        x-show="mobileMenuOpen"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 scale-95"
        x-transition:enter-end="opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 scale-100"
        x-transition:leave-end="opacity-0 scale-95"
        class="navigation-menu-mobile"
      >
        <div class="navigation-menu-mobile-content">
          <slot name="mobile-menu">
            <!-- Default mobile menu content -->
            <a href="/" class="navigation-menu-mobile-item">Home</a>
            <a href="/about" class="navigation-menu-mobile-item">About</a>
            <a href="/contact" class="navigation-menu-mobile-item">Contact</a>
          </slot>
        </div>
        
        <!-- Mobile Actions -->
        <div class="navigation-menu-mobile-actions">
          <slot name="mobile-actions">
            <button class="navigation-menu-mobile-item button button-md button-ghost-blue">
              Get Started
            </button>
          </slot>
        </div>
      </div>
    </div>
  )}
</nav>