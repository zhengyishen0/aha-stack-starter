---
export interface Props {
  id: string;
  side?: 'left' | 'right' | 'top' | 'bottom';
  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';
  closeable?: boolean;
  class?: string;
  backdropClass?: string;
  overlay?: boolean;
}

const { 
  id,
  side = 'right',
  size = 'md',
  closeable = true,
  class: className = "",
  backdropClass = "",
  overlay = true
} = Astro.props;

const sizeClasses: { [key: string]: { [key: string]: string } } = {
  left: {
    'sm': 'w-80',
    'md': 'w-96',
    'lg': 'w-[32rem]',
    'xl': 'w-[40rem]',
    'full': 'w-full'
  },
  right: {
    'sm': 'w-80',
    'md': 'w-96',
    'lg': 'w-[32rem]',
    'xl': 'w-[40rem]',
    'full': 'w-full'
  },
  top: {
    'sm': 'h-80',
    'md': 'h-96',
    'lg': 'h-[32rem]',
    'xl': 'h-[40rem]',
    'full': 'h-full'
  },
  bottom: {
    'sm': 'h-80',
    'md': 'h-96',
    'lg': 'h-[32rem]',
    'xl': 'h-[40rem]',
    'full': 'h-full'
  }
};

const positionClasses: { [key: string]: string } = {
  left: 'inset-y-0 left-0',
  right: 'inset-y-0 right-0',
  top: 'inset-x-0 top-0',
  bottom: 'inset-x-0 bottom-0'
};

const enterTransitions: { [key: string]: string } = {
  left: 'transform transition ease-in-out duration-300',
  right: 'transform transition ease-in-out duration-300',
  top: 'transform transition ease-in-out duration-300',
  bottom: 'transform transition ease-in-out duration-300'
};

const enterStartClasses: { [key: string]: string } = {
  left: '-translate-x-full',
  right: 'translate-x-full',
  top: '-translate-y-full',
  bottom: 'translate-y-full'
};
---

<!-- 
Pine UI SlideOver Component

Usage:
<SlideOver id="example-slideover" side="right" size="md" closeable={true}>
  <div slot="trigger">
    <Button>Open SlideOver</Button>
  </div>
  
  <div slot="header">
    <h2 class="text-lg font-medium text-gray-900">Panel Title</h2>
    <p class="text-sm text-gray-500">Panel description</p>
  </div>
  
  <div slot="body">
    <p>SlideOver content goes here...</p>
  </div>
  
  <div slot="footer">
    <Button variant="outline">Cancel</Button>
    <Button>Save</Button>
  </div>
</SlideOver>

Features:
- Slides from any edge (left, right, top, bottom)
- Multiple sizes
- Escape key to close
- Click outside to close
- Focus trapping
- Smooth transitions
- Alpine.js powered
- Teleports to body
- Accessible with ARIA attributes

Props:
- id: string - Unique identifier for the slide-over
- side: 'left' | 'right' | 'top' | 'bottom' - Which edge to slide from (default: 'right')
- size: 'sm' | 'md' | 'lg' | 'xl' | 'full' - Size of the panel (default: 'md')
- closeable: boolean - Whether the panel can be closed by clicking outside or escape key (default: true)
- class: string - Additional CSS classes for the panel content
- backdropClass: string - Additional CSS classes for the backdrop
- overlay: boolean - Whether to show the backdrop overlay (default: true)
-->

<div 
  x-data="{ slideOverOpen: false }"
  @keydown.escape.window="slideOverOpen = false"
  class="relative z-50 w-auto h-auto"
>
  <!-- Trigger -->
  <div @click="slideOverOpen = true">
    <slot name="trigger" />
  </div>
  
  <!-- SlideOver -->
  <template x-teleport="body">
    <div 
      x-show="slideOverOpen" 
      x-transition.opacity.duration.300ms
      x-trap.inert.noscroll="slideOverOpen"
      class={`fixed inset-0 z-[99] flex ${side === 'top' || side === 'bottom' ? 'flex-col' : ''} ${overlay ? 'bg-black bg-opacity-50' : ''} ${backdropClass}`}
      @click.self={closeable ? "slideOverOpen = false" : ""}
      role="dialog"
      aria-modal="true"
      aria-labelledby={`${id}-title`}
    >
      <div 
        x-show="slideOverOpen"
        x-transition:enter={enterTransitions[side]}
        x-transition:enter-start={enterStartClasses[side]}
        x-transition:enter-end="translate-x-0 translate-y-0"
        x-transition:leave={enterTransitions[side]}
        x-transition:leave-start="translate-x-0 translate-y-0"
        x-transition:leave-end={enterStartClasses[side]}
        class={`fixed ${positionClasses[side]} ${sizeClasses[side][size]} ${side === 'left' || side === 'right' ? 'h-full' : 'w-full'} bg-white shadow-xl overflow-hidden flex flex-col ${className}`}
      >
        <!-- Header -->
        <div class="flex items-start justify-between px-6 py-4 border-b border-gray-200 bg-gray-50">
          <div class="flex-1" id={`${id}-title`}>
            <slot name="header" />
          </div>
          {closeable && (
            <button 
              @click="slideOverOpen = false"
              class="ml-3 text-gray-400 hover:text-gray-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 rounded-md p-1"
              type="button"
              aria-label="Close panel"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          )}
        </div>
        
        <!-- Body -->
        <div class="flex-1 px-6 py-4 overflow-y-auto">
          <slot name="body" />
          <slot />
        </div>
        
        <!-- Footer -->
        <div class="flex items-center justify-end gap-3 px-6 py-4 border-t border-gray-200 bg-gray-50">
          <slot name="footer" />
        </div>
      </div>
    </div>
  </template>
</div>