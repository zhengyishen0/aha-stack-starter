---
export interface Props {
  variant?: 'solid' | 'soft' | 'outline' | 'dot';
  color?: 'black' | 'blue' | 'red' | 'green' | 'yellow' | 'purple' | 'pink' | 'gray';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  dotColor?: string;
}

const { 
  variant = 'solid', 
  color = 'black',
  size = 'md',
  class: className = "",
  dotColor = color
} = Astro.props;

const colorClasses: {
  [variant: string]: { [color: string]: string }
} = {
  solid: {
    'black': 'bg-black text-white',
    'blue': 'bg-blue-600 text-white',
    'red': 'bg-red-600 text-white',
    'green': 'bg-green-600 text-white',
    'yellow': 'bg-yellow-500 text-white',
    'purple': 'bg-purple-600 text-white',
    'pink': 'bg-pink-600 text-white',
    'gray': 'bg-gray-600 text-white',
  },
  soft: {
    'black': 'bg-gray-100 text-gray-800',
    'blue': 'bg-blue-100 text-blue-800',
    'red': 'bg-red-100 text-red-800',
    'green': 'bg-green-100 text-green-800',
    'yellow': 'bg-yellow-100 text-yellow-800',
    'purple': 'bg-purple-100 text-purple-800',
    'pink': 'bg-pink-100 text-pink-800',
    'gray': 'bg-gray-100 text-gray-800',
  },
  outline: {
    'black': 'bg-transparent text-black border border-black',
    'blue': 'bg-transparent text-blue-500 border border-blue-500',
    'red': 'bg-transparent text-red-500 border border-red-500',
    'green': 'bg-transparent text-green-500 border border-green-500',
    'yellow': 'bg-transparent text-yellow-500 border border-yellow-500',
    'purple': 'bg-transparent text-purple-500 border border-purple-500',
    'pink': 'bg-transparent text-pink-500 border border-pink-500',
    'gray': 'bg-transparent text-gray-500 border border-gray-500',
  },
  dot: {
    'black': 'bg-transparent text-gray-800 border border-neutral-300',
    'blue': 'bg-transparent text-blue-500 border border-neutral-300',
    'red': 'bg-transparent text-red-500 border border-neutral-300',
    'green': 'bg-transparent text-green-500 border border-neutral-300',
    'yellow': 'bg-transparent text-yellow-500 border border-neutral-300',
    'purple': 'bg-transparent text-purple-500 border border-neutral-300',
    'pink': 'bg-transparent text-pink-500 border border-neutral-300',
    'gray': 'bg-transparent text-gray-500 border border-neutral-300',
  }
};

const dotColors: { [key: string]: string } = {
  'black': 'bg-gray-800',
  'blue': 'bg-blue-500',
  'red': 'bg-red-500',
  'green': 'bg-green-500',
  'yellow': 'bg-yellow-500',
  'purple': 'bg-purple-500',
  'pink': 'bg-pink-500',
  'gray': 'bg-gray-500',
};

const sizeClasses: { [key: string]: string } = {
  'sm': 'px-2 py-0.5 text-xs',
  'md': 'px-2.5 py-0.5 text-xs',
  'lg': 'px-3 py-1 text-sm',
};
---

<!-- 
Pine UI Badge Component

Usage:
<Badge variant="solid" color="blue">New</Badge>
<Badge variant="soft" color="green">Success</Badge>
<Badge variant="outline" color="red">Error</Badge>
<Badge variant="dot" color="blue" dotColor="blue">Status</Badge>

Variants: solid, soft, outline, dot
Colors: black, blue, red, green, yellow, purple, pink, gray
Sizes: sm, md, lg
-->

<span class={`inline-flex items-center rounded-full font-semibold ${sizeClasses[size]} ${colorClasses[variant][color]} ${className}`}>
  {variant === 'dot' && (
    <span class={`block w-1.5 h-1.5 -ml-0.5 mr-1 ${dotColors[dotColor]} rounded-full`}></span>
  )}
  <slot />
</span>