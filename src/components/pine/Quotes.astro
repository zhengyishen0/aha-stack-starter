---
export interface Props {
  quote: string;
  author: string;
  role?: string;
  company?: string;
  avatar?: string;
  variant?: 'default' | 'centered' | 'minimal';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const { 
  quote,
  author,
  role,
  company,
  avatar,
  variant = 'default',
  size = 'md',
  class: className = ""
} = Astro.props;

// Generate class names using our design system
const getComponentClasses = () => {
  const baseClass = 'quote';
  const variantClass = `quote-${variant}`;
  
  return `${baseClass} ${variantClass}`;
};

const getQuoteTextClasses = () => {
  const baseClass = 'quote-text';
  const sizeClass = `quote-text-${size}`;
  const minimalClass = variant === 'minimal' ? 'quote-text-minimal' : '';
  
  return `${baseClass} ${sizeClass} ${minimalClass}`.trim();
};

const getQuoteAuthorClasses = () => {
  const baseClass = 'quote-author';
  const sizeClass = `quote-author-${size}`;
  
  return `${baseClass} ${sizeClass}`;
};

const getQuoteIconClasses = () => {
  const baseClass = 'quote-icon';
  const centeredClass = variant === 'centered' ? 'quote-icon-centered' : '';
  
  return `${baseClass} ${centeredClass}`.trim();
};

const getQuoteFooterClasses = () => {
  const baseClass = 'quote-footer';
  const centeredClass = variant === 'centered' ? 'quote-footer-centered' : '';
  
  return `${baseClass} ${centeredClass}`.trim();
};

const getQuoteAttributionClasses = () => {
  const baseClass = 'quote-attribution';
  const centeredClass = variant === 'centered' ? 'quote-attribution-centered' : '';
  
  return `${baseClass} ${centeredClass}`.trim();
};
---

<!-- 
Pine UI Quotes Component

Usage:
<Quotes 
  quote="This is an amazing product that has transformed our workflow."
  author="John Doe"
  role="CEO"
  company="Acme Corp"
  avatar="/path/to/avatar.jpg"
  variant="centered"
  size="lg"
/>

Props:
- quote: The quote text (required)
- author: Author name (required)
- role: Author's job title (optional)
- company: Author's company (optional)
- avatar: URL to author's avatar image (optional)
- variant: Layout style - 'default', 'centered', 'minimal'
- size: Text size - 'sm', 'md', 'lg'
- class: Additional CSS classes
-->

<blockquote class={`${getComponentClasses()} ${className}`}>
  {variant !== 'minimal' && (
    <svg class={getQuoteIconClasses()} fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
    </svg>
  )}
  
  <p class={getQuoteTextClasses()}>
    "{quote}"
  </p>
  
  <footer class={getQuoteFooterClasses()}>
    {avatar && (
      <img 
        class="quote-avatar"
        src={avatar}
        alt={`${author} avatar`}
        loading="lazy"
      />
    )}
    
    <div class={getQuoteAttributionClasses()}>
      <cite class={getQuoteAuthorClasses()}>
        {author}
      </cite>
      {(role || company) && (
        <p class="quote-role">
          {role && role}{role && company && ', '}{company && company}
        </p>
      )}
    </div>
  </footer>
</blockquote>