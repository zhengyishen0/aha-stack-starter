---
export interface Props {
  id?: string;
  placement?: 'bottom-start' | 'bottom-end' | 'top-start' | 'top-end';
  class?: string;
  menuClass?: string;
}

const { 
  id = 'dropdown',
  placement = 'bottom-start',
  class: className = "",
  menuClass = ""
} = Astro.props;

const placementClasses: { [key: string]: string } = {
  'bottom-start': 'top-full left-0 mt-2',
  'bottom-end': 'top-full right-0 mt-2',
  'top-start': 'bottom-full left-0 mb-2',
  'top-end': 'bottom-full right-0 mb-2'
};
---

<!-- 
Pine UI Dropdown Component

Usage:
<Dropdown placement="bottom-start">
  <div slot="trigger">
    <Button>Open Menu</Button>
  </div>
  
  <div slot="menu">
    <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Profile</a>
    <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Settings</a>
    <hr class="my-1">
    <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Sign out</a>
  </div>
</Dropdown>

Features:
- Click outside to close
- Multiple placement options
- Smooth transitions
- Alpine.js powered
- Customizable styling
-->

<div 
  x-data="{ dropdownOpen: false }" 
  class={`relative inline-block ${className}`}
>
  <!-- Trigger -->
  <div @click="dropdownOpen = !dropdownOpen">
    <slot name="trigger" />
  </div>
  
  <!-- Menu -->
  <div 
    x-show="dropdownOpen" 
    @click.away="dropdownOpen = false"
    x-transition:enter="transition ease-out duration-100"
    x-transition:enter-start="transform opacity-0 scale-95"
    x-transition:enter-end="transform opacity-100 scale-100"
    x-transition:leave="transition ease-in duration-75"
    x-transition:leave-start="transform opacity-100 scale-100"
    x-transition:leave-end="transform opacity-0 scale-95"
    class={`absolute z-50 ${placementClasses[placement]} min-w-48 bg-white border border-neutral-200 rounded-md shadow-lg py-1 ${menuClass}`}
    x-cloak
  >
    <slot name="menu" />
  </div>
</div>