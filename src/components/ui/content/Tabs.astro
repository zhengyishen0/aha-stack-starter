---
export interface Props {
  tabs: Array<{
    id: string;
    label: string;
    content?: string;
    disabled?: boolean;
  }>;
  defaultTab?: string;
  context?: 'default' | 'pills';
  class?: string;
  contentClass?: string;
}

const { 
  tabs,
  defaultTab = tabs[0]?.id,
  context = 'default',
  class: className = "",
  contentClass = ""
} = Astro.props;

// Generate class names using true design system
const getComponentClasses = () => {
  const baseClass = 'tabs';
  const contextClass = context !== 'default' ? `${context}-tabs` : '';
  return `${baseClass} ${contextClass} ${className}`.trim();
};
---

<!-- 
TRUE Design System Tabs Component

Usage:
<Tabs 
  tabs={[
    { id: "tab1", label: "Overview", content: "Overview content..." },
    { id: "tab2", label: "Analytics", content: "Analytics content..." },
    { id: "tab3", label: "Settings", content: "Settings content...", disabled: true }
  ]}
  defaultTab="tab1"
/>

<Tabs context="pills" tabs={...} />

Contextual Variants: default (underlined), pills
-->

<div 
  x-data={`{
    tabSelected: '${defaultTab}',
    tabId: $id('tab'),
    tabButtonClicked(tabButton) {
      this.tabSelected = tabButton.id.replace(this.tabId + '-', '');
    },
    tabContentActive(tabContent) {
      return this.tabSelected == tabContent.id.replace(this.tabId + '-content-', '');
    }
  }`}
  class={getComponentClasses()}
>
  <!-- Tab Navigation -->
  <div class="tab-list">
    <div x-ref="tabButtons">
      {tabs.map((tab) => (
        <button 
          :id="`${tabId}-${tab.id}`"
          @click="tabButtonClicked($el)"
          class="tab-item"
          data-state={tab.disabled ? 'disabled' : `tabSelected === '${tab.id}' ? 'active' : null`}
          disabled={tab.disabled}
          type="button"
        >
          {tab.label}
        </button>
      ))}
    </div>
  </div>
  
  <!-- Tab Content -->
  <div class={`tab-content ${contentClass}`}>
    {tabs.map((tab) => (
      <div 
        :id="`${tabId}-content-${tab.id}`"
        x-show="tabSelected === '${tab.id}'"
        class="tab-panel"
      >
        {tab.content ? (
          <div set:html={tab.content} />
        ) : (
          <slot />
        )}
      </div>
    ))}
  </div>
</div>