---
import { cn } from '@/lib/utils';
import { createUIComponent, type UIComponentProps, type VariantProps } from '@/lib/component-variants';
import { ChevronDown, Plus, Minus } from 'lucide-astro';

const accordionTriggerVariants = createUIComponent(
  'flex items-center justify-between w-full font-semibold text-left select-none text-foreground',
  {
    variant: {
      default: 'hover:text-foreground/80',
      subtle: 'text-muted-foreground hover:text-foreground'
    }
  }
);

export interface Props extends UIComponentProps, VariantProps<typeof accordionTriggerVariants> {
  iconType?: 'chevron' | 'plus';
  text?: string;
  variant?: 'default' | 'subtle';
}

const {
  iconType = 'chevron',
  size,
  padding = 'lg',
  elevation,
  variant = 'default',
  text,
  class: className,
  ...alpineProps
} = Astro.props;
---

<button 
  @click="setActiveAccordion(id)"
  {...alpineProps}
  :class={`"${cn(
    accordionTriggerVariants({ size, padding, elevation, variant }),
    className
  )}"`}
  type="button"
>
  <span class="flex-1">
    {text ? (
      <span x-text={text}></span>
    ) : (
      <slot />
    )}
  </span>
  
  <!-- Icon Area -->
  <div class="relative flex items-center justify-center w-6 h-6 duration-300 ease-out ml-4">
    <!-- Custom Icon Slot -->
    <slot name="icon">
      <!-- Default Icons -->
      {iconType === 'plus' ? (
        <div class="relative flex items-center justify-center">
          <Plus 
            class="w-4 h-4 text-muted-foreground group-hover:text-foreground transition-all duration-300"
            :class="{ 'opacity-0': activeAccordion==id }"
          />
          <Minus 
            class="absolute w-4 h-4 text-muted-foreground group-hover:text-foreground transition-all duration-300"
            :class="{ 'opacity-0': activeAccordion!=id }"
          />
        </div>
      ) : (
        <ChevronDown 
          class="w-5 h-5 text-muted-foreground group-hover:text-foreground transition-transform duration-200"
          :class="{ 'rotate-180': activeAccordion==id }"
        />
      )}
    </slot>
  </div>
</button>