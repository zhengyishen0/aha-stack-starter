/* 
 * BUTTON COMPONENT - CUBE CSS
 * Part of the Basis Design System
 * Uses B (Block) + U (Utilities) + CSS Variables
 */

/* ==========================================================================
   BUTTON BASE (B - Block)
   ========================================================================== */

.btn {
  /* Structure */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-sm);
  
  /* Base styling */
  font-family: var(--font-family);
  font-weight: var(--font-weight-medium);
  letter-spacing: 0.025em;
  border-radius: var(--btn-radius, var(--radius-md));
  border: var(--border-md) solid transparent;
  cursor: pointer;
  text-decoration: none;
  outline: none;
  transition: all var(--transition-normal);
  
  /* CSS Variables (modified by utilities) */
  padding: var(--btn-padding, var(--space-sm) var(--space-lg));
  font-size: var(--btn-font-size, var(--text-md));
  background: var(--btn-bg, var(--color-primary));
  color: var(--btn-color, var(--color-primary-text));
  border-color: var(--btn-border, transparent);
  
}

/* Hover effects */
.btn:hover {
  background: var(--btn-bg-hover, var(--color-primary-hover));
  transform: translateY(var(--btn-hover-lift, calc(-1 * var(--space-xs))));
  box-shadow: var(--btn-hover-shadow, var(--shadow-md));
}

.btn:active {
  transform: translateY(0);
  transition: all var(--transition-fast);
}

.btn:focus-visible {
  outline: var(--border-sm) solid var(--btn-bg);
  outline-offset: var(--space-xs);
}

/* Smart content detection with :has() */
.btn:has(svg:only-child) {
  /* Icon-only button - make it square */
  aspect-ratio: 1;
  padding: var(--space-sm);
}


/* ==========================================================================
   SIZE UTILITIES (U - Utilities)
   ========================================================================== */

.size-xs {
  --btn-padding: var(--space-xs) var(--space-sm);
  --btn-font-size: var(--text-xs);
  --btn-hover-lift: calc(-1 * var(--space-px));
  --btn-hover-shadow: var(--shadow-xs);
}

.size-sm {
  --btn-padding: var(--space-sm) var(--space-md);
  --btn-font-size: var(--text-sm);
  --btn-hover-lift: calc(-1 * var(--space-px));
  --btn-hover-shadow: var(--shadow-xs);
}

.size-md {
  --btn-padding: var(--space-sm) var(--space-lg);
  --btn-font-size: var(--text-md);
  --btn-hover-lift: calc(-1 * var(--space-xs));
  --btn-hover-shadow: var(--shadow-md);
}

.size-lg {
  --btn-padding: var(--space-md) var(--space-xl);
  --btn-font-size: var(--text-lg);
  --btn-hover-lift: calc(-1 * var(--space-sm));
  --btn-hover-shadow: var(--shadow-lg);
}

.size-icon {
  --btn-padding: var(--space-sm);
  --btn-font-size: var(--text-md);
  --btn-hover-lift: calc(-1 * var(--space-xs));
  --btn-hover-shadow: var(--shadow-sm);
  aspect-ratio: 1;
}

/* ==========================================================================
   COLOR UTILITIES (U - Utilities)
   ========================================================================== */

.color-primary {
  --btn-bg: var(--color-primary);
  --btn-color: var(--color-primary-text);
  --btn-bg-hover: var(--color-primary-hover);
}

.color-secondary {
  --btn-bg: var(--color-secondary);
  --btn-color: var(--color-secondary-text);
  --btn-bg-hover: var(--color-secondary-hover);
}

.color-destructive {
  --btn-bg: var(--color-destructive);
  --btn-color: var(--color-destructive-text);
  --btn-bg-hover: var(--color-destructive-hover);
}

.color-success {
  --btn-bg: var(--color-success);
  --btn-color: var(--color-success-text);
  --btn-bg-hover: var(--color-success-hover);
}

.color-neutral {
  --btn-bg: var(--color-neutral);
  --btn-color: var(--color-neutral-text);
  --btn-bg-hover: var(--color-neutral-hover);
}

/* ==========================================================================
   VARIANT UTILITIES (U - Utilities)
   ========================================================================== */

/* Store base color for variants */
.color-primary { --btn-bg-base: var(--color-primary); }
.color-secondary { --btn-bg-base: var(--color-secondary); }
.color-destructive { --btn-bg-base: var(--color-destructive); }
.color-success { --btn-bg-base: var(--color-success); }
.color-neutral { --btn-bg-base: var(--color-neutral); }

.variant-outline {
  --btn-bg: transparent;
  --btn-color: var(--btn-bg-base, var(--color-primary));
  --btn-border: var(--btn-bg-base, var(--color-primary));
  
}

.variant-outline:hover {
  --btn-bg: var(--btn-bg-base, var(--color-primary));
  --btn-color: var(--color-primary-text);
}

.variant-ghost {
  --btn-bg: transparent;
  --btn-color: var(--btn-bg-base, var(--color-primary));
  --btn-border: transparent;
  --btn-hover-lift: -1px;
  
}

.variant-ghost:hover {
  background: var(--color-surface-hover);
}

.variant-soft {
  --btn-bg: var(--color-surface-soft);
  --btn-color: var(--btn-bg-base, var(--color-primary));
  --btn-border: transparent;
}

/* ==========================================================================
   STATES (E - Exceptions)
   ========================================================================== */

.btn:disabled,
.btn.is-disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.btn.is-loading {
  position: relative;
  color: transparent;
  
}

.btn.is-loading::after {
  content: "";
  position: absolute;
  width: 1rem;
  height: 1rem;
  border: 2px solid currentColor;
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s linear infinite;
}

/* ==========================================================================
   SMART BUTTON GROUPS WITH :has()
   ========================================================================== */

/* Detect button groups and connect them */
.cluster:has(.btn + .btn) {
  gap: 0;
  
}

.cluster:has(.btn + .btn) .btn:not(:first-child) {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
  border-inline-start: 0;
}

.cluster:has(.btn + .btn) .btn:not(:last-child) {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

/* ==========================================================================
   ANIMATIONS
   ========================================================================== */

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* ==========================================================================
   LEGACY SUPPORT (Remove after migration)
   ========================================================================== */

/* Map old classes to new CUBE classes */
.button {
  /* Inherit all .btn styles */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-sm);
  font-family: var(--font-family);
  font-weight: var(--font-weight-medium);
  letter-spacing: 0.025em;
  border-radius: var(--radius-md);
  border: var(--border-md) solid transparent;
  cursor: pointer;
  text-decoration: none;
  outline: none;
  transition: all var(--transition-normal);
  
  /* Default size-md + color-primary */
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  background: var(--color-primary);
  color: var(--color-primary-text);
  --btn-hover-lift: -2px;
  --btn-hover-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.button:hover {
  background: var(--color-primary-hover);
  transform: translateY(var(--btn-hover-lift));
  box-shadow: var(--btn-hover-shadow);
}

/* ==========================================================================
   SHAPE UTILITIES (U - Utilities)
   ========================================================================== */

/* Semantic shape presets */
.shape-square { --btn-radius: var(--radius-sm); }
.shape-round { --btn-radius: var(--radius-md); }
.shape-pill { --btn-radius: var(--radius-full); }