---
import { cn } from '@/lib/utils';
import { createLayoutComponent, type LayoutComponentProps, type VariantProps } from '@/lib/component-variants';

const gridVariants = createLayoutComponent(
  'grid',
  {
    columns: {
      auto: 'grid-cols-[repeat(auto-fit,minmax(280px,1fr))] md:grid-cols-[repeat(auto-fit,minmax(280px,1fr))]',
      1: 'grid-cols-1',
      2: 'grid-cols-1 md:grid-cols-2', 
      3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
      4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',
      5: 'grid-cols-1 md:grid-cols-3 lg:grid-cols-5',
      6: 'grid-cols-2 md:grid-cols-4 lg:grid-cols-6',
      12: 'grid-cols-4 md:grid-cols-8 lg:grid-cols-12'
    }
  }
);

export interface Props extends LayoutComponentProps, VariantProps<typeof gridVariants> {
  columns?: 'auto' | '1' | '2' | '3' | '4' | '5' | '6' | '12';
}

const { 
  columns = 'auto',
  gap,
  padding,
  align,
  justify,
  class: className = '',
  ...rest
} = Astro.props;

const classes = cn(
  gridVariants({ columns, gap, padding, align, justify }),
  className
);
---

<div class={classes} {...rest}>
  {rest['x-for'] ? (
    <template x-for={rest['x-for']} :key={rest['x-key']}>
      <slot />
    </template>
  ) : (
    <slot />
  )}
</div>