---
// Import component styles
import '/src/styles/components/list-item.css';
import { Row } from '../core';

export interface Props {
  align?: 'start' | 'center' | 'end' | 'stretch' | 'baseline';
  gap?: 'tight' | 'default' | 'loose' | 'none';
  interactive?: boolean;
  class?: string;
  [key: string]: any; // Allow any Alpine.js attributes
}

const { 
  align = 'center',
  gap = 'default',
  interactive = false,
  class: className = "",
  ...rest
} = Astro.props;

// Generate class names using true design system
const getListItemClasses = () => {
  const baseClass = 'list-item';
  const interactiveClass = interactive ? 'list-item-interactive' : '';
  
  return `${baseClass} ${interactiveClass} ${className}`.trim();
};
---

<!-- 
TRUE Design System ListItem Component

Usage:
<ListItem>
  <Checkbox slot="left" />
  Task content goes here
  <Button slot="right">Delete</Button>
</ListItem>

<ListItem interactive>
  <Icon slot="left" />
  Clickable list item
  <Badge slot="right" />
</ListItem>

Props:
- align: start, center, end, stretch, baseline (default: center)
- gap: tight, default, loose, none (default: default)
- interactive: boolean - adds hover/focus states
-->

<Row 
  align={align}
  gap={gap}
  class={getListItemClasses()}
  {...rest}
>
  <!-- Left content (icons, checkboxes, avatars) -->
  {Astro.slots.left && (
    <div class="list-item-left">
      <slot name="left" />
    </div>
  )}
  
  <!-- Main content (flexible, takes remaining space) -->
  <div class="list-item-content">
    <slot />
  </div>
  
  <!-- Right content (actions, badges, metadata) -->
  {Astro.slots.right && (
    <div class="list-item-right">
      <slot name="right" />
    </div>
  )}
</Row>