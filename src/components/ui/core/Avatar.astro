---
// Import component styles
import '/src/styles/components/avatar.css';

export interface Props {
  src?: string;
  alt?: string;
  size?: 'sm' | 'md' | 'lg' | 'xl';
  variant?: 'circle' | 'square';
  elevation?: 'none' | 'subtle' | 'elevated' | 'floating';
  theme?: 'default' | 'dark' | 'brand';
  iconScale?: 'sm' | 'md' | 'lg' | 'full';
  icon?: string;
  href?: string;
  class?: string;
  [key: string]: any; // Allow any attributes
}

const { 
  src,
  alt = '',
  size = 'md',
  variant = 'circle',
  elevation = 'none',
  theme = 'default',
  iconScale = 'md',
  icon,
  href,
  class: className = "",
  ...rest
} = Astro.props;

// Generate class names using true design system
const getAvatarClasses = () => {
  const baseClass = 'avatar';
  const sizeClass = `avatar-${size}`;
  const variantClass = `avatar-${variant}`;
  
  return `${baseClass} ${sizeClass} ${variantClass} ${className}`.trim();
};

// Determine if we should render as a link
const isLink = !!href;
const Element = isLink ? 'a' : 'div';
---

<!-- 
TRUE Design System Avatar Component

Usage:
<Avatar src="/path/to/image.jpg" alt="User name" size="lg" />
<Avatar icon="/assets/github-icon.svg" variant="circle" size="md" href="https://github.com" />
<Avatar size="sm">
  <span>JD</span>
</Avatar>

Props:
- src: Image source URL
- alt: Alt text for image
- size: 'sm' | 'md' | 'lg' | 'xl' (default: 'md')
- variant: 'circle' | 'square' (default: 'circle')
- icon: SVG icon path
- href: Makes avatar clickable link
- class: Additional CSS classes
- ...rest: Any other attributes
-->

<Element 
  class={getAvatarClasses()} 
  href={isLink ? href : undefined}
  data-size={size}
  data-variant={variant}
  data-elevation={elevation !== 'none' ? elevation : null}
  data-theme={theme !== 'default' ? theme : null}
  data-icon-scale={iconScale !== 'md' ? iconScale : null}
  {...rest}
>
  {src && <img src={src} alt={alt} class="avatar-image" />}
  {icon && <img src={icon} alt={alt} class="avatar-icon" />}
  {!src && !icon && <slot />}
</Element>