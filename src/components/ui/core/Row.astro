---
import { cn } from '@/lib/utils';

export interface Props {
  justify?: 'start' | 'center' | 'end' | 'between' | 'around' | 'evenly' | 'grid';
  align?: 'start' | 'center' | 'end' | 'stretch' | 'baseline';
  gap?: '1' | '2' | '3' | '4' | '6' | '8';
  wrap?: boolean;
  
  // Visual styling
  padding?: '2' | '3' | '4' | '6' | '8';
  interactive?: boolean;
  bordered?: boolean;
  sticky?: boolean;
  
  class?: string;
  [key: string]: any; // Alpine.js pass-through
}

const {
  justify = 'start',
  align = 'center',
  gap = '4',
  wrap = false,
  padding = '0',
  interactive = false,
  bordered = false,
  sticky = false,
  class: className = '',
  ...rest
} = Astro.props;

const useGrid = justify === 'grid';
const useFlexbox = justify !== 'grid';

const classes = cn(
  // Layout method
  useGrid && 'grid grid-cols-[auto_1fr_auto] items-center',
  useGrid && '[&>:nth-child(2)]:justify-self-center',
  useFlexbox && 'flex flex-row',
  
  // Flexbox properties
  useFlexbox && `items-${align}`,
  useFlexbox && `justify-${justify}`,
  useFlexbox && wrap && 'flex-wrap',
  
  // Spacing
  `gap-${gap}`,
  padding !== '0' && `p-${padding}`,
  
  // Visual states
  interactive && 'cursor-pointer hover:bg-gray-50 transition-colors',
  bordered && 'border-b border-gray-200',
  sticky && 'sticky top-0 z-40',
  
  className
);
---


<div class={classes} {...rest}>
  <slot />
</div>