---
// Import co-located component styles
import './button.css';

export interface Props {
  variant?: 'solid' | 'outline' | 'ghost' | 'soft';
  color?: 'primary' | 'secondary' | 'danger' | 'success' | 'neutral';
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  rounded?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | 'full';
  disabled?: boolean;
  loading?: boolean;
  type?: 'button' | 'submit' | 'reset';
  href?: string;
  target?: string;
  class?: string;
  [key: string]: any; // Allow any Alpine.js attributes
}

const { 
  variant = 'solid',
  color = 'primary',
  size = 'md',
  rounded = 'md',
  disabled = false,
  loading = false,
  type = 'button',
  href,
  target,
  class: className = "",
  ...rest
} = Astro.props;

// Generate CUBE CSS classes
const classes = [
  'btn',
  `color-${color}`,
  `size-${size}`,
  variant !== 'solid' && `variant-${variant}`,
  rounded !== 'md' && `rounded-${rounded}`,
  loading && 'is-loading',
  disabled && 'is-disabled',
  className
].filter(Boolean).join(' ');

const Tag = href ? 'a' : 'button';
const tagProps = href 
  ? { href, target, style: "text-decoration: none;" }
  : { type, disabled: disabled && !loading };
---

<!-- 
CUBE CSS Button Component

Usage:
<Button>Default</Button>
<Button color="danger" variant="outline">Delete</Button>
<Button size="lg" loading>Loading...</Button>

New Props:
- color: primary (default), secondary, danger, success, neutral
- variant: solid (default), outline, ghost, soft
- size: xs, sm, md (default), lg, xl
- rounded: none, xs, sm, md (default), lg, xl, 2xl, 3xl, full
- loading: boolean - shows spinner
-->

<Tag 
  class={classes}
  {...tagProps}
  {...rest}
>
  <slot name="icon-start" />
  <slot />
  <slot name="icon-end" />
</Tag>