---
// Import component styles
import '/src/styles/components/text.css';

export interface Props {
  state?: 'active' | 'completed' | 'pending' | 'disabled';
  as?: 'span' | 'div' | 'p' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'strong' | 'em' | 'small';
  class?: string;
  [key: string]: any; // Allow any Alpine.js attributes
}

const { 
  state = 'active',
  as: Element = 'span',
  class: className = "",
  ...rest
} = Astro.props;

// Generate class names using true design system
const getStateTextClasses = () => {
  const baseClass = 'state-text';
  const stateClass = state !== 'active' ? `state-text-${state}` : '';
  
  return `${baseClass} ${stateClass} ${className}`.trim();
};
---

<!-- 
TRUE Design System Text Component

Usage:
<Text state="active">Active task</Text>
<Text state="completed">Completed task</Text>
<Text state="pending" as="p">Pending paragraph</Text>
<Text state="disabled" as="h3">Disabled heading</Text>
<Text as="h2" slot="header">Header text</Text>

Props:
- state: active (default), completed, pending, disabled
- as: span (default), div, p, h1-h6, strong, em, small
- slot: any slot name (passed through)
- All other props passed through (Alpine.js, classes, etc.)
-->

<Element class={getStateTextClasses()} {...rest}>
  <slot />
</Element>