---
export interface Props {
  variant?: 'default' | 'blue' | 'red' | 'green' | 'yellow' | 'soft-blue' | 'soft-red' | 'soft-green' | 'soft-yellow';
  title?: string;
  icon?: string;
  class?: string;
  dismissible?: boolean;
}

const { 
  variant = 'default', 
  title, 
  icon, 
  class: className = "",
  dismissible = false 
} = Astro.props;

// Generate class names using our design system
const getAlertClasses = () => {
  const baseClass = 'alert';
  const variantClass = `alert-${variant}`;
  
  return `${baseClass} ${variantClass}`;
};
---

<!-- 
Pine UI Alert Component

Usage:
<Alert 
  variant="blue" 
  title="Information" 
  dismissible={true}
>
  This is an informational alert message.
</Alert>

Variants: default, blue, red, green, yellow, soft-blue, soft-red, soft-green, soft-yellow
Features:
- Optional dismissible functionality
- Custom icons
- Multiple color variants
-->

<aside 
  role="alert"
  class={`${getAlertClasses()} ${className}`}
  {...(dismissible ? { 'x-data': '{ alertVisible: true }', 'x-show': 'alertVisible' } : {})}
>
  {icon && (
    <svg class="alert-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <Fragment set:html={icon} />
    </svg>
  )}
  
  {dismissible && (
    <button 
      @click="alertVisible = false"
      class="alert-dismiss"
      type="button"
    >
      <svg class="alert-dismiss-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  )}
  
  <div class={icon ? "alert-content-with-icon" : ""}>
    {title && (
      <h5 class="alert-title">
        {title}
      </h5>
    )}
    
    <div class={`alert-content ${title ? "has-title" : ""}`}>
      <slot />
    </div>
  </div>
</aside>