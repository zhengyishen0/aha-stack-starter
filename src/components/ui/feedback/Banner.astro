---
export interface Props {
  visible?: boolean;
  visibleAfter?: number;
  position?: 'top' | 'bottom';
  variant?: 'default' | 'info' | 'warning' | 'danger' | 'success';
  context?: 'default' | 'form' | 'hero';
  dismissible?: boolean;
  class?: string;
  [key: string]: any; // Allow any Alpine.js attributes
}

const { 
  visible = false,
  visibleAfter = 300,
  position = 'top',
  variant = 'default',
  context = 'default',
  dismissible = true,
  class: className = "",
  ...rest
} = Astro.props;

// Generate class names using true design system
const getComponentClasses = () => {
  const baseClass = 'banner';
  const contextClass = context !== 'default' ? `${context}-banner` : '';
  return `${baseClass} ${contextClass} ${className}`.trim();
};
---

<!-- 
TRUE Design System Banner Component

Usage:
<Banner visible={true} position="top">
  <p>Important announcement message here</p>
</Banner>

<Banner variant="warning" context="hero" dismissible={true}>
  <p>Warning message</p>
</Banner>

Semantic Variants: default, info, warning, danger, success
Contextual Variants: default, form, hero
-->

<aside 
  role="banner"
  x-data={`{ 
    bannerVisible: ${visible}, 
    bannerVisibleAfter: ${visibleAfter} 
  }`}
  x-init="setTimeout(() => { bannerVisible = true }, bannerVisibleAfter)"
  x-show="bannerVisible"
  x-transition:enter="transition ease-out duration-500"
  x-transition:enter-start="-translate-y-10"
  x-transition:enter-end="translate-y-0"
  x-transition:leave="transition ease-in duration-300"
  x-transition:leave-start="translate-y-0"
  x-transition:leave-end="-translate-y-10"
  class={getComponentClasses()}
  data-position={position !== 'top' ? position : null}
  data-variant={variant !== 'default' ? variant : null}
  {...rest}
>
  <div class="banner-container">
    <div class="banner-content">
      <div class="banner-message">
        <slot />
      </div>
      
      {dismissible && (
        <button 
          @click="bannerVisible = false"
          class="banner-close"
          type="button"
          aria-label="Close banner"
        >
          <svg class="banner-close-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      )}
    </div>
  </div>
</aside>