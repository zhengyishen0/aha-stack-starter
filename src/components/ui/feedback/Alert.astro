---
export interface Props {
  variant?: 'default' | 'info' | 'success' | 'warning' | 'error';
  title?: string;
  icon?: string;
  class?: string;
  dismissible?: boolean;
  [key: string]: any; // Allow any Alpine.js attributes
}

const { 
  variant = 'default', 
  title, 
  icon, 
  class: className = "",
  dismissible = false,
  ...rest
} = Astro.props;
---

<!-- 
TRUE Design System Alert Component

Usage:
<Alert>Default alert message</Alert>
<Alert variant="info" title="Information">This is an informational alert.</Alert>
<Alert variant="success" dismissible={true}>Operation completed successfully!</Alert>
<Alert variant="warning">Please check your input.</Alert>
<Alert variant="error">Something went wrong.</Alert>

Semantic Variants: default, info, success, warning, error
-->

<aside 
  role="alert"
  class={`alert ${className}`}
  data-variant={variant !== 'default' ? variant : null}
  {...(dismissible ? { 'x-data': '{ alertVisible: true }', 'x-show': 'alertVisible' } : {})}
  {...rest}
>
  {icon && (
    <svg class="alert-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <Fragment set:html={icon} />
    </svg>
  )}
  
  {dismissible && (
    <button 
      @click="alertVisible = false"
      class="alert-dismiss"
      type="button"
    >
      <svg class="alert-dismiss-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  )}
  
  <div class="alert-body">
    {title && (
      <h5 class="alert-title">
        {title}
      </h5>
    )}
    
    <div class="alert-content">
      <slot />
    </div>
  </div>
</aside>