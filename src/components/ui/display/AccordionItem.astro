---
import { cn } from '@/lib/utils';
import { createUIComponent, type UIComponentProps, type VariantProps } from '@/lib/component-variants';

const accordionItemVariants = createUIComponent(
  'duration-200 ease-out bg-background border border-border rounded-md cursor-pointer group mb-2',
  {
    variant: {
      default: 'bg-background border-border',
      elevated: 'bg-background border-border shadow-elevated',
      flat: 'bg-background border-border shadow-flat'
    }
  }
);

export interface Props extends UIComponentProps, VariantProps<typeof accordionItemVariants> {
  value?: string;
  variant?: 'default' | 'elevated' | 'flat';
}

const {
  value,
  size,
  padding = 'none',
  elevation,
  variant = 'default',
  class: className,
  ...alpineProps
} = Astro.props;

// Extract x-for and x-key from alpineProps so they don't get passed to the div
const { 'x-for': xFor, 'x-key': xKey, ...restProps } = alpineProps;
---

{
  xFor ? (
    <template x-for={xFor} x-key={xKey}>
      <div 
        x-data="{ id: $id('accordion') }"
        {...restProps}
        :class={`"${cn(
          accordionItemVariants({ size, padding, elevation, variant }),
          className
        )}"`}
        x-cloak
      >
        <slot />
      </div>
    </template>
  ) : (
    <div 
      x-data="{ id: $id('accordion') }"
      {...restProps}
      :class={`"${cn(
        accordionItemVariants({ size, padding, elevation, variant }),
        className
      )}"`}
      x-cloak
    >
      <slot />
    </div>
  )
}