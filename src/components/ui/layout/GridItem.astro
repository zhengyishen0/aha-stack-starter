---
import { cn } from '@/lib/utils';
import { createLayoutComponent, type LayoutComponentProps, type VariantProps } from '@/lib/component-variants';

const gridItemVariants = createLayoutComponent(
  'flex flex-col w-full',
  {
    variant: {
      default: '',
      card: 'rounded-lg border border-gray-200 bg-white shadow-md'
    },
    interactive: {
      true: 'hover:bg-gray-50 cursor-pointer transition-colors',
      false: ''
    },
    bordered: {
      true: 'border border-gray-200 rounded-lg',
      false: ''
    },
    elevated: {
      true: 'shadow-sm hover:shadow-md transition-shadow',
      false: ''
    }
  }
);

export interface Props extends LayoutComponentProps, VariantProps<typeof gridItemVariants> {
  variant?: 'default' | 'card';
  interactive?: boolean;
  bordered?: boolean;
  elevated?: boolean;
}

const {
  variant = 'default',
  gap = 'md',
  padding = 'md',
  justify = 'start',
  align = 'start',
  interactive = false,
  bordered = false,
  elevated = false,
  class: className = '',
  ...alpineProps
} = Astro.props;

// Extract x-for and x-key from alpineProps so they don't get passed to the div
const { 'x-for': xFor, 'x-key': xKey, ...restProps } = alpineProps;

const classes = cn(
  gridItemVariants({ variant, gap, padding, justify, align, interactive, bordered, elevated }),
  className
);
---

{
  xFor ? (
    <template x-for={xFor} x-key={xKey}>
      <div class={classes} {...restProps}>
        <slot />
      </div>
    </template>
  ) : (
    <div class={classes} {...restProps}>
      <slot />
    </div>
  )
}