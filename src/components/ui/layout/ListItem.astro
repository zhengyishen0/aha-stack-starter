---
import { cn } from '@/lib/utils';
import { createLayoutComponent, type LayoutComponentProps, type VariantProps, universalVariants } from '@/lib/component-variants';

const listItemVariants = createLayoutComponent(
  'flex items-center w-full min-h-[2.5rem]',
  {
    interactive: {
      true: 'hover:bg-gray-50 cursor-pointer',
      false: ''
    },
    bordered: {
      true: 'border-b border-gray-200 last:border-b-0',
      false: ''
    }
  }
);

export interface Props extends LayoutComponentProps, VariantProps<typeof listItemVariants> {
  interactive?: boolean;
  bordered?: boolean;
  padding?: import('@/lib/component-variants').UniversalSpacing;
}

const {
  justify = 'start',
  align = 'center',
  overflow = 'expand',
  interactive = false,
  bordered = false,
  padding = 'sm',
  class: className = '',
  ...alpineProps
} = Astro.props;

// Extract x-for and x-key from alpineProps so they don't get passed to the div
const { 'x-for': xFor, 'x-key': xKey, ...restProps } = alpineProps;

const classes = cn(
  listItemVariants({ justify, align, interactive, bordered }),
  universalVariants.padding[padding],
  universalVariants.overflow[overflow],
  className
);
---

{
  xFor ? (
    <template x-for={xFor} x-key={xKey}>
      <div class={classes} {...restProps}>
        <slot />
      </div>
    </template>
  ) : (
    <div class={classes} {...restProps}>
      <slot />
    </div>
  )
}