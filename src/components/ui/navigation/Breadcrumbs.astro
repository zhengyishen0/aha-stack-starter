---
export interface Props {
  items: Array<{
    label: string;
    href?: string;
    icon?: string;
    current?: boolean;
  }>;
  separator?: 'default' | 'slash' | 'dot';
  context?: 'default' | 'compact' | 'minimal';
  showHome?: boolean;
  class?: string;
  [key: string]: any; // Allow any Alpine.js attributes
}

const { 
  items,
  separator = 'default',
  context = 'default',
  showHome = true,
  class: className = "",
  ...rest
} = Astro.props;

// Generate class names using true design system
const getComponentClasses = () => {
  const baseClass = 'breadcrumbs';
  const contextClass = context !== 'default' ? `${context}-breadcrumbs` : '';
  return `${baseClass} ${contextClass}`.trim();
};

const separatorIcons: { [key: string]: string } = {
  default: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>',
  slash: '/',
  dot: '•'
};
---

<!-- 
TRUE Design System Breadcrumbs Component

Usage:
<Breadcrumbs 
  items={[
    { label: "Dashboard", href: "/dashboard" },
    { label: "Users", href: "/users" },
    { label: "Profile", current: true }
  ]}
/>

<Breadcrumbs 
  separator="slash"
  context="compact"
  showHome={false}
  items={breadcrumbItems}
/>

Semantic Variants: default (chevron), slash, dot separators
Contextual Variants: default, compact, minimal
-->

<nav 
  class={`${getComponentClasses()} ${className}`} 
  aria-label="Breadcrumb"
  data-separator={separator !== 'default' ? separator : null}
  {...rest}
>
  <ol class="breadcrumbs-list">
    <!-- Home icon -->
    {showHome && (
      <li>
        <a 
          href="/" 
          class="breadcrumbs-home"
          aria-label="Home"
        >
          <svg class="breadcrumb-home-icon" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
          </svg>
        </a>
      </li>
    )}
    
    <!-- Breadcrumb items -->
    {items.map((item, index) => (
      <li class="breadcrumb-item">
        <!-- Separator -->
        {(index > 0 || showHome) && (
          <div class="breadcrumb-separator">
            {separator === 'default' && (
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <Fragment set:html={separatorIcons.default} />
              </svg>
            )}
            {separator === 'slash' && (
              <span>/</span>
            )}
            {separator === 'dot' && (
              <span>•</span>
            )}
          </div>
        )}
        
        <!-- Breadcrumb link or current page -->
        {item.current ? (
          <span class="breadcrumb-current" aria-current="page">
            {item.icon && (
              <Fragment set:html={item.icon} />
            )}
            {item.label}
          </span>
        ) : (
          <a 
            href={item.href}
            class="breadcrumb-link"
          >
            {item.icon && (
              <Fragment set:html={item.icon} />
            )}
            {item.label}
          </a>
        )}
      </li>
    ))}
  </ol>
</nav>