---
import { cva, type VariantProps } from 'class-variance-authority';
import { cn } from '@/lib/utils';

const badgeVariants = cva(
    'inline-flex items-center justify-center rounded-full border h-5 min-w-5 px-1.5 text-xs font-semibold font-mono tabular-nums transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',
    {
        variants: {
            variant: {
                default:
                    'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',
                secondary:
                    'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',
                destructive:
                    'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',
                outline: 'text-foreground',
            },
        },
        defaultVariants: {
            variant: 'default',
        },
    }
);

export interface Props extends VariantProps<typeof badgeVariants> {
    class?: string;
    [key: string]: any;
}

const { variant, class: className, ...alpineProps } = Astro.props;
---

<!-- 
Badge Component (shadcn/ui style)

Usage:
<Badge variant="default">Default</Badge>
<Badge variant="secondary">Secondary</Badge> 
<Badge variant="destructive">Error</Badge>
<Badge variant="outline">Outline</Badge>

Variants: default, secondary, destructive, outline
Supports Alpine.js props: x-data, @click, :class, etc.
-->
<span class={cn(badgeVariants({ variant }), className)} {...alpineProps}>
    <slot />
</span>
