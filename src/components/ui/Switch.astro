---
export interface Props {
  id: string;
  name?: string;
  checked?: boolean;
  disabled?: boolean;
  label?: string;
  description?: string;
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const { 
  id,
  name = id,
  checked = false,
  disabled = false,
  label,
  description,
  size = 'md',
  class: className = ""
} = Astro.props;

// Generate design system classes
const getComponentClasses = () => {
  const baseClass = 'switch';
  const sizeClass = size ? `${baseClass}-${size}` : '';
  return `${baseClass} ${sizeClass}`.trim();
};

const getThumbClasses = () => {
  const baseClass = 'switch-thumb';
  const sizeClass = size ? `${baseClass}-${size}` : '';
  return `${baseClass} ${sizeClass}`.trim();
};
---

<!-- 
Pine UI Switch Component

Usage:
<Switch 
  id="notifications" 
  label="Email notifications" 
  description="Receive email updates about your account activity"
  checked={true}
  size="md"
/>

Features:
- Alpine.js powered toggle
- Multiple sizes
- Optional labels and descriptions
- Smooth animations
- Disabled state
-->

<div 
  x-data={`{ switchOn: ${checked} }`}
  class={`switch-wrapper ${className}`}
>
  <div class="switch-input-wrapper">
    <input 
      type="checkbox" 
      :checked="switchOn" 
      id={id}
      name={name}
      disabled={disabled}
      class="switch-input-hidden"
    />
    <button 
      type="button"
      @click="switchOn = !switchOn"
      :class="switchOn ? 'switch-on' : ''"
      :disabled="disabled"
      class={`${getComponentClasses()} ${disabled ? 'disabled' : ''}`}
    >
      <span 
        class={getThumbClasses()}
      ></span>
    </button>
  </div>
  
  {(label || description) && (
    <div class="switch-content">
      {label && (
        <label 
          for={id} 
          class={`switch-label ${disabled ? 'disabled' : ''}`}
        >
          {label}
        </label>
      )}
      {description && (
        <p class={`switch-description ${disabled ? 'disabled' : ''}`}>
          {description}
        </p>
      )}
    </div>
  )}
</div>