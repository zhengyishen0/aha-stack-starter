---
export interface Props {
  id: string;
  name?: string;
  checked?: boolean;
  disabled?: boolean;
  label?: string;
  description?: string;
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const { 
  id,
  name = id,
  checked = false,
  disabled = false,
  label,
  description,
  size = 'md',
  class: className = ""
} = Astro.props;

const sizeClasses = {
  'sm': {
    switch: 'w-8 h-5',
    thumb: 'w-3 h-3',
    translate: 'translate-x-3'
  },
  'md': {
    switch: 'w-11 h-6',
    thumb: 'w-5 h-5',
    translate: 'translate-x-5'
  },
  'lg': {
    switch: 'w-14 h-7',
    thumb: 'w-6 h-6',
    translate: 'translate-x-7'
  }
};
---

<!-- 
Pine UI Switch Component

Usage:
<Switch 
  id="notifications" 
  label="Email notifications" 
  description="Receive email updates about your account activity"
  checked={true}
  size="md"
/>

Features:
- Alpine.js powered toggle
- Multiple sizes
- Optional labels and descriptions
- Smooth animations
- Disabled state
-->

<div 
  x-data={`{ switchOn: ${checked} }`}
  class={`flex items-start ${className}`}
>
  <div class="flex items-center">
    <input 
      type="checkbox" 
      :checked="switchOn" 
      id={id}
      name={name}
      disabled={disabled}
      class="sr-only"
    />
    <button 
      type="button"
      @click="switchOn = !switchOn"
      :class="switchOn ? 'bg-neutral-900' : 'bg-gray-200'"
      :disabled="disabled"
      class={`relative inline-flex items-center ${sizeClasses[size].switch} rounded-full transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-neutral-900 focus:ring-offset-2 ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}
    >
      <span 
        :class={`switchOn ? '${sizeClasses[size].translate}' : 'translate-x-1'`}
        class={`inline-block ${sizeClasses[size].thumb} bg-white rounded-full transition-transform duration-200 ease-in-out`}
      ></span>
    </button>
  </div>
  
  {(label || description) && (
    <div class="ml-3">
      {label && (
        <label 
          for={id} 
          class={`text-sm font-medium text-gray-900 cursor-pointer ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}
        >
          {label}
        </label>
      )}
      {description && (
        <p class={`text-sm text-gray-500 ${disabled ? 'opacity-50' : ''}`}>
          {description}
        </p>
      )}
    </div>
  )}
</div>