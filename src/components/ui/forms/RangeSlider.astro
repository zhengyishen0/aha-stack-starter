---
export interface Props {
  min?: number;
  max?: number;
  step?: number;
  value?: number;
  disabled?: boolean;
  name?: string;
  id?: string;
  showValue?: boolean;
  class?: string;
}

const { 
  min = 0,
  max = 100,
  step = 1,
  value = 50,
  disabled = false,
  name,
  id,
  showValue = true,
  class: className = ""
} = Astro.props;
---

<!-- 
Pine UI Range Slider Component

Usage:
<RangeSlider 
  min={0}
  max={100}
  step={1}
  value={50}
  disabled={false}
  showValue={true}
  name="slider"
/>

Features:
- Custom min/max/step values
- Value display
- Disabled state
- Cross-browser styling
- Alpine.js integration
-->

<div 
  x-data={`{
    sliderValue: ${value},
    min: ${min},
    max: ${max},
    step: ${step}
  }`}
  class={`w-full ${className}`}
>
  <div class="flex items-center space-x-4">
    <!-- Range input -->
    <input 
      type="range"
      :min="min"
      :max="max"
      :step="step"
      x-model="sliderValue"
      name={name}
      id={id}
      disabled={disabled}
      class={`flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer 
        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
        slider-thumb:appearance-none slider-thumb:w-5 slider-thumb:h-5 
        slider-thumb:bg-blue-600 slider-thumb:rounded-full slider-thumb:cursor-pointer
        slider-thumb:border-2 slider-thumb:border-white slider-thumb:shadow-md
        hover:slider-thumb:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed`}
    />
    
    <!-- Value display -->
    {showValue && (
      <div class="flex items-center justify-center w-16 px-2 py-1 text-sm font-medium text-gray-700 bg-gray-100 rounded-md">
        <span x-text="sliderValue"></span>
      </div>
    )}
  </div>
  
  <!-- Min/max labels -->
  <div class="flex justify-between mt-2 text-xs text-gray-500">
    <span>{min}</span>
    <span>{max}</span>
  </div>
</div>

<style>
/* Custom slider styling for webkit browsers */
input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
}

input[type="range"]::-webkit-slider-track {
  height: 8px;
  background: #e5e7eb;
  border-radius: 4px;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  height: 20px;
  width: 20px;
  background: #2563eb;
  border-radius: 50%;
  border: 2px solid #ffffff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  cursor: pointer;
}

input[type="range"]::-webkit-slider-thumb:hover {
  background: #1d4ed8;
}

input[type="range"]:disabled::-webkit-slider-thumb {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Custom slider styling for Firefox */
input[type="range"]::-moz-range-track {
  height: 8px;
  background: #e5e7eb;
  border-radius: 4px;
  border: none;
}

input[type="range"]::-moz-range-thumb {
  height: 20px;
  width: 20px;
  background: #2563eb;
  border-radius: 50%;
  border: 2px solid #ffffff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  cursor: pointer;
}

input[type="range"]::-moz-range-thumb:hover {
  background: #1d4ed8;
}

/* Remove default focus outline */
input[type="range"]:focus {
  outline: none;
}
</style>