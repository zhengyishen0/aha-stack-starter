/* 
 * Monaco Editor Component Styles
 * Styles for the Monaco code editor integration
 */

/* Monaco Editor Component Styles */
.monaco-editor {
  position: relative;
  z-index: var(--z-dropdown);
  width: 100%;
  height: 400px;
  border-radius: var(--radius-lg);
  border: 1px solid var(--color-border);
  background: var(--color-surface-elevated);
  box-shadow: var(--shadow-lg);
  overflow: hidden;
  transition: all var(--transition-normal);
}

/* Contextual sizing */
.compact-monaco-editor {
  height: 200px;
  border-radius: var(--radius-md);
}

.fullscreen-monaco-editor {
  height: 80vh;
  border-radius: var(--radius-xl);
}

.inline-monaco-editor {
  height: 150px;
  border-radius: var(--radius-sm);
  box-shadow: var(--shadow-sm);
}

.monaco-editor:hover {
  border-color: var(--color-border-hover);
  box-shadow: var(--shadow-xl);
}

.monaco-editor-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: var(--radius-md);
}

.monaco-editor-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  color: var(--color-text-secondary);
}

.monaco-editor-loading-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-8);
}

.monaco-editor-loading-spinner {
  width: var(--space-8);
  height: var(--space-8);
  animation: spin 1s linear infinite;
  color: var(--color-primary);
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.monaco-editor-loading-text {
  font-size: var(--text-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-secondary);
}

.monaco-editor-error {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: var(--color-surface);
  border: 1px solid var(--color-danger);
  border-radius: var(--radius-lg);
  padding: var(--space-8);
  gap: var(--space-4);
}

/* States */
.monaco-editor[data-state="loading"] .monaco-editor-loading {
  display: flex;
}

.monaco-editor[data-state="error"] .monaco-editor-error {
  display: flex;
}

.monaco-editor[data-state="readonly"] {
  opacity: 0.8;
  pointer-events: none;
}

.monaco-editor[data-theme="dark"] {
  background: var(--color-neutral-dark);
  border-color: var(--color-border-dark);
}

.monaco-editor-error-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-2);
  text-align: center;
}

.monaco-editor-error-icon {
  width: var(--space-12);
  height: var(--space-12);
  color: var(--color-danger);
}

.monaco-editor-error-title {
  font-size: var(--text-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-danger);
  margin: 0;
}

.monaco-editor-error-message {
  font-size: var(--text-sm);
  color: var(--color-text-secondary);
  margin: 0;
}

.monaco-editor-error-retry {
  margin-top: var(--space-2);
}

.monaco-editor-status {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--space-2) var(--space-4);
  background: var(--color-surface);
  border-top: 1px solid var(--color-border);
  font-size: var(--text-xs);
  color: var(--color-text-secondary);
  flex-wrap: wrap;
  gap: var(--space-2);
}

.monaco-editor-status-info {
  display: flex;
  align-items: center;
  gap: var(--space-4);
}

.monaco-editor-status-item {
  font-weight: var(--font-weight-medium);
}

.monaco-editor-status-value {
  font-weight: var(--font-weight-normal);
  color: var(--color-text-primary);
}

.monaco-editor-toolbar {
  display: flex;
  align-items: center;
  gap: var(--space-1);
}

.monaco-editor-toolbar-button {
  font-size: var(--text-xs);
  padding: var(--space-1) var(--space-2);
  border-radius: var(--radius-sm);
}
